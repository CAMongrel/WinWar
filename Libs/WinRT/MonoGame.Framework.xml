<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MonoGame.Framework</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Xna.Framework.BoundingBox.CreateFromPoints(System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Vector3})">
            <summary>
            Create a bounding box from the given list of points.
            </summary>
            <param name="points">The list of Vector3 instances defining the point cloud to bound</param>
            <returns>A bounding box that encapsulates the given point cloud.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the given list has no points.</exception>
        </member>
        <member name="T:Microsoft.Xna.Framework.Color">
            <summary>
            Describe a 32-bit packed color.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Xna.Framework.Color"/> struct.
            </summary>
            <param name="color">A <see cref="T:Microsoft.Xna.Framework.Vector4"/> representing color.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Xna.Framework.Color"/> struct.
            </summary>
            <param name="color">A <see cref="T:Microsoft.Xna.Framework.Vector3"/> representing color.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Xna.Framework.Color"/> struct.
            </summary>
            <param name="color">A <see cref="T:Microsoft.Xna.Framework.Color"/> for RGB values of new <see cref="T:Microsoft.Xna.Framework.Color"/> instance.</param>
            <param name="alpha">Alpha component value.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Xna.Framework.Color"/> struct.
            </summary>
            <param name="color">A <see cref="T:Microsoft.Xna.Framework.Color"/> for RGB values of new <see cref="T:Microsoft.Xna.Framework.Color"/> instance.</param>
            <param name="alpha">Alpha component value.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Xna.Framework.Color"/> struct.
            </summary>
            <param name="r">Red component value.</param>
            <param name="g">Green component value.</param>
            <param name="b">Blue component value</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Xna.Framework.Color"/> struct.
            </summary>
            <param name="r">Red component value.</param>
            <param name="g">Green component value.</param>
            <param name="b">Blue component value</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Xna.Framework.Color"/> struct.
            </summary>
            <param name="r">Red component value.</param>
            <param name="g">Green component value.</param>
            <param name="b">Blue component value</param>
            <param name="alpha">Alpha component value.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Xna.Framework.Color"/> struct.
            </summary>
            <param name="r">Red component value.</param>
            <param name="g">Green component value.</param>
            <param name="b">Blue component value</param>
            <param name="alpha">Alpha component value.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.op_Equality(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Color"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.Color"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.Color"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.op_Inequality(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Color"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.Color"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.Color"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.GetHashCode">
            <summary>
            Gets the hash code for <see cref="T:Microsoft.Xna.Framework.Color"/> instance.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified object.
            </summary>
            <param name="obj">The <see cref="T:Microsoft.Xna.Framework.Color"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Lerp(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Performs linear interpolation of <see cref="T:Microsoft.Xna.Framework.Color"/>.
            </summary>
            <param name="value1">Source <see cref="T:Microsoft.Xna.Framework.Color"/>.</param>
            <param name="value2">Destination <see cref="T:Microsoft.Xna.Framework.Color"/>.</param>
            <param name="amount">Interpolation factor.</param>
            <returns>Interpolated <see cref="T:Microsoft.Xna.Framework.Color"/>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Multiply(Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Multiply <see cref="T:Microsoft.Xna.Framework.Color"/> by value.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Color"/>.</param>
            <param name="scale">Multiplicator.</param>
            <returns>Multiplication result.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.op_Multiply(Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Multiply <see cref="T:Microsoft.Xna.Framework.Color"/> by value.
            </summary>
            <param name="value">Source <see cref="T:Microsoft.Xna.Framework.Color"/>.</param>
            <param name="scale">Multiplicator.</param>
            <returns>Multiplication result.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.ToVector3">
            <summary>
            Converts <see cref="T:Microsoft.Xna.Framework.Color"/> to <see cref="T:Microsoft.Xna.Framework.Vector3"/>.
            </summary>
            <returns>Converted color.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.ToVector4">
            <summary>
            Converts <see cref="T:Microsoft.Xna.Framework.Color"/> to <see cref="T:Microsoft.Xna.Framework.Vector4"/>.
            </summary>
            <returns>Converted color.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.ToString">
            <summary>
            Converts the color values of this instance to its equivalent string representation.
            </summary>
            <returns>The string representation of the color value of this instance.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.FromNonPremultiplied(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Translate a non-premultipled alpha <see cref="T:Microsoft.Xna.Framework.Color"/> to a <see cref="T:Microsoft.Xna.Framework.Color"/> that contains premultiplied alpha.
            </summary>
            <param name="vector">A <see cref="T:Microsoft.Xna.Framework.Vector4"/> representing color.</param>
            <returns>A <see cref="T:Microsoft.Xna.Framework.Color"/> which contains premultiplied alpha data.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.FromNonPremultiplied(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Translate a non-premultipled alpha <see cref="T:Microsoft.Xna.Framework.Color"/> to a <see cref="T:Microsoft.Xna.Framework.Color"/> that contains premultiplied alpha.
            </summary>
            <param name="r">Red component value.</param>
            <param name="g">Green component value.</param>
            <param name="b">Blue component value.</param>
            <param name="a">Alpha component value.</param>
            <returns>A <see cref="T:Microsoft.Xna.Framework.Color"/> which contains premultiplied alpha data.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Color.Equals(Microsoft.Xna.Framework.Color)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Microsoft.Xna.Framework.Color"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Xna.Framework.Color"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.B">
            <summary>
            Gets or sets the blue component of <see cref="T:Microsoft.Xna.Framework.Color"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.G">
            <summary>
            Gets or sets the green component of <see cref="T:Microsoft.Xna.Framework.Color"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.R">
            <summary>
            Gets or sets the red component of <see cref="T:Microsoft.Xna.Framework.Color"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.A">
            <summary>
            Gets or sets the alpha component of <see cref="T:Microsoft.Xna.Framework.Color"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.TransparentBlack">
            <summary>
            TransparentBlack color (R:0,G:0,B:0,A:0).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Transparent">
            <summary>
            Transparent color (R:0,G:0,B:0,A:0).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.AliceBlue">
            <summary>
            AliceBlue color (R:240,G:248,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.AntiqueWhite">
            <summary>
            AntiqueWhite color (R:250,G:235,B:215,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Aqua">
            <summary>
            Aqua color (R:0,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Aquamarine">
            <summary>
            Aquamarine color (R:127,G:255,B:212,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Azure">
            <summary>
            Azure color (R:240,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Beige">
            <summary>
            Beige color (R:245,G:245,B:220,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Bisque">
            <summary>
            Bisque color (R:255,G:228,B:196,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Black">
            <summary>
            Black color (R:0,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.BlanchedAlmond">
            <summary>
            BlanchedAlmond color (R:255,G:235,B:205,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Blue">
            <summary>
            Blue color (R:0,G:0,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.BlueViolet">
            <summary>
            BlueViolet color (R:138,G:43,B:226,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Brown">
            <summary>
            Brown color (R:165,G:42,B:42,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.BurlyWood">
            <summary>
            BurlyWood color (R:222,G:184,B:135,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.CadetBlue">
            <summary>
            CadetBlue color (R:95,G:158,B:160,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Chartreuse">
            <summary>
            Chartreuse color (R:127,G:255,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Chocolate">
            <summary>
            Chocolate color (R:210,G:105,B:30,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Coral">
            <summary>
            Coral color (R:255,G:127,B:80,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.CornflowerBlue">
            <summary>
            CornflowerBlue color (R:100,G:149,B:237,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Cornsilk">
            <summary>
            Cornsilk color (R:255,G:248,B:220,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Crimson">
            <summary>
            Crimson color (R:220,G:20,B:60,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Cyan">
            <summary>
            Cyan color (R:0,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkBlue">
            <summary>
            DarkBlue color (R:0,G:0,B:139,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkCyan">
            <summary>
            DarkCyan color (R:0,G:139,B:139,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkGoldenrod">
            <summary>
            DarkGoldenrod color (R:184,G:134,B:11,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkGray">
            <summary>
            DarkGray color (R:169,G:169,B:169,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkGreen">
            <summary>
            DarkGreen color (R:0,G:100,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkKhaki">
            <summary>
            DarkKhaki color (R:189,G:183,B:107,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkMagenta">
            <summary>
            DarkMagenta color (R:139,G:0,B:139,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkOliveGreen">
            <summary>
            DarkOliveGreen color (R:85,G:107,B:47,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkOrange">
            <summary>
            DarkOrange color (R:255,G:140,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkOrchid">
            <summary>
            DarkOrchid color (R:153,G:50,B:204,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkRed">
            <summary>
            DarkRed color (R:139,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkSalmon">
            <summary>
            DarkSalmon color (R:233,G:150,B:122,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkSeaGreen">
            <summary>
            DarkSeaGreen color (R:143,G:188,B:139,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkSlateBlue">
            <summary>
            DarkSlateBlue color (R:72,G:61,B:139,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkSlateGray">
            <summary>
            DarkSlateGray color (R:47,G:79,B:79,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkTurquoise">
            <summary>
            DarkTurquoise color (R:0,G:206,B:209,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DarkViolet">
            <summary>
            DarkViolet color (R:148,G:0,B:211,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DeepPink">
            <summary>
            DeepPink color (R:255,G:20,B:147,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DeepSkyBlue">
            <summary>
            DeepSkyBlue color (R:0,G:191,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DimGray">
            <summary>
            DimGray color (R:105,G:105,B:105,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.DodgerBlue">
            <summary>
            DodgerBlue color (R:30,G:144,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Firebrick">
            <summary>
            Firebrick color (R:178,G:34,B:34,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.FloralWhite">
            <summary>
            FloralWhite color (R:255,G:250,B:240,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.ForestGreen">
            <summary>
            ForestGreen color (R:34,G:139,B:34,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Fuchsia">
            <summary>
            Fuchsia color (R:255,G:0,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Gainsboro">
            <summary>
            Gainsboro color (R:220,G:220,B:220,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.GhostWhite">
            <summary>
            GhostWhite color (R:248,G:248,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Gold">
            <summary>
            Gold color (R:255,G:215,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Goldenrod">
            <summary>
            Goldenrod color (R:218,G:165,B:32,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Gray">
            <summary>
            Gray color (R:128,G:128,B:128,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Green">
            <summary>
            Green color (R:0,G:128,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.GreenYellow">
            <summary>
            GreenYellow color (R:173,G:255,B:47,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Honeydew">
            <summary>
            Honeydew color (R:240,G:255,B:240,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.HotPink">
            <summary>
            HotPink color (R:255,G:105,B:180,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.IndianRed">
            <summary>
            IndianRed color (R:205,G:92,B:92,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Indigo">
            <summary>
            Indigo color (R:75,G:0,B:130,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Ivory">
            <summary>
            Ivory color (R:255,G:255,B:240,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Khaki">
            <summary>
            Khaki color (R:240,G:230,B:140,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Lavender">
            <summary>
            Lavender color (R:230,G:230,B:250,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LavenderBlush">
            <summary>
            LavenderBlush color (R:255,G:240,B:245,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LawnGreen">
            <summary>
            LawnGreen color (R:124,G:252,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LemonChiffon">
            <summary>
            LemonChiffon color (R:255,G:250,B:205,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightBlue">
            <summary>
            LightBlue color (R:173,G:216,B:230,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightCoral">
            <summary>
            LightCoral color (R:240,G:128,B:128,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightCyan">
            <summary>
            LightCyan color (R:224,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightGoldenrodYellow">
            <summary>
            LightGoldenrodYellow color (R:250,G:250,B:210,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightGray">
            <summary>
            LightGray color (R:211,G:211,B:211,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightGreen">
            <summary>
            LightGreen color (R:144,G:238,B:144,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightPink">
            <summary>
            LightPink color (R:255,G:182,B:193,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightSalmon">
            <summary>
            LightSalmon color (R:255,G:160,B:122,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightSeaGreen">
            <summary>
            LightSeaGreen color (R:32,G:178,B:170,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightSkyBlue">
            <summary>
            LightSkyBlue color (R:135,G:206,B:250,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightSlateGray">
            <summary>
            LightSlateGray color (R:119,G:136,B:153,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightSteelBlue">
            <summary>
            LightSteelBlue color (R:176,G:196,B:222,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LightYellow">
            <summary>
            LightYellow color (R:255,G:255,B:224,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Lime">
            <summary>
            Lime color (R:0,G:255,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.LimeGreen">
            <summary>
            LimeGreen color (R:50,G:205,B:50,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Linen">
            <summary>
            Linen color (R:250,G:240,B:230,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Magenta">
            <summary>
            Magenta color (R:255,G:0,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Maroon">
            <summary>
            Maroon color (R:128,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumAquamarine">
            <summary>
            MediumAquamarine color (R:102,G:205,B:170,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumBlue">
            <summary>
            MediumBlue color (R:0,G:0,B:205,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumOrchid">
            <summary>
            MediumOrchid color (R:186,G:85,B:211,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumPurple">
            <summary>
            MediumPurple color (R:147,G:112,B:219,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumSeaGreen">
            <summary>
            MediumSeaGreen color (R:60,G:179,B:113,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumSlateBlue">
            <summary>
            MediumSlateBlue color (R:123,G:104,B:238,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumSpringGreen">
            <summary>
            MediumSpringGreen color (R:0,G:250,B:154,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumTurquoise">
            <summary>
            MediumTurquoise color (R:72,G:209,B:204,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MediumVioletRed">
            <summary>
            MediumVioletRed color (R:199,G:21,B:133,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MidnightBlue">
            <summary>
            MidnightBlue color (R:25,G:25,B:112,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MintCream">
            <summary>
            MintCream color (R:245,G:255,B:250,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.MistyRose">
            <summary>
            MistyRose color (R:255,G:228,B:225,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Moccasin">
            <summary>
            Moccasin color (R:255,G:228,B:181,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.NavajoWhite">
            <summary>
            NavajoWhite color (R:255,G:222,B:173,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Navy">
            <summary>
            Navy color (R:0,G:0,B:128,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.OldLace">
            <summary>
            OldLace color (R:253,G:245,B:230,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Olive">
            <summary>
            Olive color (R:128,G:128,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.OliveDrab">
            <summary>
            OliveDrab color (R:107,G:142,B:35,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Orange">
            <summary>
            Orange color (R:255,G:165,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.OrangeRed">
            <summary>
            OrangeRed color (R:255,G:69,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Orchid">
            <summary>
            Orchid color (R:218,G:112,B:214,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PaleGoldenrod">
            <summary>
            PaleGoldenrod color (R:238,G:232,B:170,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PaleGreen">
            <summary>
            PaleGreen color (R:152,G:251,B:152,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PaleTurquoise">
            <summary>
            PaleTurquoise color (R:175,G:238,B:238,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PaleVioletRed">
            <summary>
            PaleVioletRed color (R:219,G:112,B:147,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PapayaWhip">
            <summary>
            PapayaWhip color (R:255,G:239,B:213,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PeachPuff">
            <summary>
            PeachPuff color (R:255,G:218,B:185,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Peru">
            <summary>
            Peru color (R:205,G:133,B:63,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Pink">
            <summary>
            Pink color (R:255,G:192,B:203,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Plum">
            <summary>
            Plum color (R:221,G:160,B:221,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PowderBlue">
            <summary>
            PowderBlue color (R:176,G:224,B:230,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Purple">
            <summary>
             Purple color (R:128,G:0,B:128,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Red">
            <summary>
            Red color (R:255,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.RosyBrown">
            <summary>
            RosyBrown color (R:188,G:143,B:143,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.RoyalBlue">
            <summary>
            RoyalBlue color (R:65,G:105,B:225,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SaddleBrown">
            <summary>
            SaddleBrown color (R:139,G:69,B:19,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Salmon">
            <summary>
            Salmon color (R:250,G:128,B:114,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SandyBrown">
            <summary>
            SandyBrown color (R:244,G:164,B:96,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SeaGreen">
            <summary>
            SeaGreen color (R:46,G:139,B:87,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SeaShell">
            <summary>
            SeaShell color (R:255,G:245,B:238,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Sienna">
            <summary>
            Sienna color (R:160,G:82,B:45,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Silver">
            <summary>
            Silver color (R:192,G:192,B:192,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SkyBlue">
            <summary>
            SkyBlue color (R:135,G:206,B:235,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SlateBlue">
            <summary>
            SlateBlue color (R:106,G:90,B:205,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SlateGray">
            <summary>
            SlateGray color (R:112,G:128,B:144,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Snow">
            <summary>
            Snow color (R:255,G:250,B:250,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SpringGreen">
            <summary>
            SpringGreen color (R:0,G:255,B:127,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.SteelBlue">
            <summary>
            SteelBlue color (R:70,G:130,B:180,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Tan">
            <summary>
            Tan color (R:210,G:180,B:140,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Teal">
            <summary>
            Teal color (R:0,G:128,B:128,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Thistle">
            <summary>
            Thistle color (R:216,G:191,B:216,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Tomato">
            <summary>
            Tomato color (R:255,G:99,B:71,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Turquoise">
            <summary>
            Turquoise color (R:64,G:224,B:208,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Violet">
            <summary>
            Violet color (R:238,G:130,B:238,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Wheat">
            <summary>
            Wheat color (R:245,G:222,B:179,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.White">
            <summary>
            White color (R:255,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.WhiteSmoke">
            <summary>
            WhiteSmoke color (R:245,G:245,B:245,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.Yellow">
            <summary>
            Yellow color (R:255,G:255,B:0,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.YellowGreen">
            <summary>
            YellowGreen color (R:154,G:205,B:50,A:255).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Color.PackedValue">
            <summary>
            Gets or sets packed value of this <see cref="T:Microsoft.Xna.Framework.Color"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameComponent.Dispose(System.Boolean)">
            <summary>
            Shuts down the component.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GameComponent.Dispose">
            <summary>
            Shuts down the component.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Game.SortingFilteringCollection`1">
            <summary>
            The SortingFilteringCollection class provides efficient, reusable
            sorting and filtering based on a configurable sort comparer, filter
            predicate, and associate change events.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.RaiseAsyncRunLoopEnded">
            <summary>
            Raises the AsyncRunLoopEnded event.  This method must be called by
            derived classes when the asynchronous run loop they start has
            stopped running.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.BeforeInitialize">
            <summary>
            Gives derived classes an opportunity to do work before any
            components are initialized.  Note that the base implementation sets
            IsActive to true, so derived classes should either call the base
            implementation or set IsActive to true by their own means.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.BeforeRun">
            <summary>
            Gives derived classes an opportunity to do work just before the
            run loop is begun.  Implementations may also return false to prevent
            the run loop from starting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.Exit">
            <summary>
            When implemented in a derived, ends the active run loop.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.RunLoop">
            <summary>
            When implemented in a derived, starts the run loop and blocks
            until it has ended.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.StartRunLoop">
            <summary>
            When implemented in a derived, starts the run loop and returns
            immediately.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.BeforeUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Gives derived classes an opportunity to do work just before Update
            is called for all IUpdatable components.  Returning false from this
            method will result in this round of Update calls being skipped.
            </summary>
            <param name="gameTime"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.BeforeDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Gives derived classes an opportunity to do work just before Draw
            is called for all IDrawable components.  Returning false from this
            method will result in this round of Draw calls being skipped.
            </summary>
            <param name="gameTime"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.EnterFullScreen">
            <summary>
            When implemented in a derived class, causes the game to enter
            full-screen mode.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.ExitFullScreen">
            <summary>
            When implemented in a derived class, causes the game to exit
            full-screen mode.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.TargetElapsedTimeChanging(System.TimeSpan)">
            <summary>
            Gives derived classes an opportunity to modify
            Game.TargetElapsedTime before it is set.
            </summary>
            <param name="value">The proposed new value of TargetElapsedTime.</param>
            <returns>The new value of TargetElapsedTime that will be set.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.BeginScreenDeviceChange(System.Boolean)">
            <summary>
            Starts a device transition (windowed to full screen or vice versa).
            </summary>
            <param name='willBeFullScreen'>
            Specifies whether the device will be in full-screen mode upon completion of the change.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.EndScreenDeviceChange(System.String,System.Int32,System.Int32)">
            <summary>
            Completes a device transition.
            </summary>
            <param name='screenDeviceName'>
            Screen device name.
            </param>
            <param name='clientWidth'>
            The new width of the game's client window.
            </param>
            <param name='clientHeight'>
            The new height of the game's client window.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.TargetElapsedTimeChanged">
            <summary>
            Gives derived classes an opportunity to take action after
            Game.TargetElapsedTime has been set.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.ResetElapsedTime">
            <summary>
            MSDN: Use this method if your game is recovering from a slow-running state, and ElapsedGameTime is too large to be useful.
            Frame timing is generally handled by the Game class, but some platforms still handle it elsewhere. Once all platforms
            rely on the Game class's functionality, this method and any overrides should be removed.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing,
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.GamePlatform.Log(System.String)">
            <summary>
            Log the specified Message.
            </summary>
            <param name='Message'>
            
            </param>
        </member>
        <member name="P:Microsoft.Xna.Framework.GamePlatform.DefaultRunBehavior">
            <summary>
            When implemented in a derived class, reports the default
            GameRunBehavior for this platform.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GamePlatform.Game">
            <summary>
            Gets the Game instance that owns this GamePlatform instance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameWindow.AllowAltF4">
            <summary>
            Gets or sets the bool that enables the Alt+F4 usage for window closing(on all platforms, except WinRT). Its true by default.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.GameWindow.IsBorderless">
            <summary>
            Determines whether the border of the window is visible. Currently only supported on the WinDX and WinGL/Linux platforms.
            </summary>
            <exception cref="T:System.NotImplementedException">
            Thrown when trying to use this property on a platform other than the WinDX and WinGL/Linux platforms.
            </exception>
        </member>
        <member name="T:Microsoft.Xna.Framework.MathHelper">
            <summary>
            Contains commonly used precalculated values and mathematical operations.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.E">
            <summary>
            Represents the mathematical constant e(2.71828175).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.Log10E">
            <summary>
            Represents the log base ten of e(0.4342945).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.Log2E">
            <summary>
            Represents the log base two of e(1.442695).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.Pi">
            <summary>
            Represents the value of pi(3.14159274).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.PiOver2">
            <summary>
            Represents the value of pi divided by two(1.57079637).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.PiOver4">
            <summary>
            Represents the value of pi divided by four(0.7853982).
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.MathHelper.TwoPi">
            <summary>
            Represents the value of pi times two(6.28318548).
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns the Cartesian coordinate for one axis of a point that is defined by a given triangle and two normalized barycentric (areal) coordinates.
            </summary>
            <param name="value1">The coordinate on one axis of vertex 1 of the defining triangle.</param>
            <param name="value2">The coordinate on the same axis of vertex 2 of the defining triangle.</param>
            <param name="value3">The coordinate on the same axis of vertex 3 of the defining triangle.</param>
            <param name="amount1">The normalized barycentric (areal) coordinate b2, equal to the weighting factor for vertex 2, the coordinate of which is specified in value2.</param>
            <param name="amount2">The normalized barycentric (areal) coordinate b3, equal to the weighting factor for vertex 3, the coordinate of which is specified in value3.</param>
            <returns>Cartesian coordinate of the specified point with respect to the axis being used.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Performs a Catmull-Rom interpolation using the specified positions.
            </summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>A position that is the result of the Catmull-Rom interpolation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Clamp(System.Single,System.Single,System.Single)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c> will be returned.</param>
            <param name="max">The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c> will be returned.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c> will be returned.</param>
            <param name="max">The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c> will be returned.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Distance(System.Single,System.Single)">
            <summary>
            Calculates the absolute value of the difference of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>Distance between the two values.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Performs a Hermite spline interpolation.
            </summary>
            <param name="value1">Source position.</param>
            <param name="tangent1">Source tangent.</param>
            <param name="value2">Source position.</param>
            <param name="tangent2">Source tangent.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of the Hermite spline interpolation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Lerp(System.Single,System.Single,System.Single)">
            <summary>
            Linearly interpolates between two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
            <returns>Interpolated value.</returns> 
            <remarks>This method performs the linear interpolation based on the following formula.
            <c>value1 + (value2 - value1) * amount</c>
            Passing amount a value of 0 will cause value1 to be returned, a value of 1 will cause value2 to be returned.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Max(System.Single,System.Single)">
            <summary>
            Returns the greater of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The greater value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.Min(System.Single,System.Single)">
            <summary>
            Returns the lesser of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The lesser value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.SmoothStep(System.Single,System.Single,System.Single)">
            <summary>
            Interpolates between two values using a cubic equation.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Weighting value.</param>
            <returns>Interpolated value.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.ToDegrees(System.Single)">
            <summary>
            Converts radians to degrees.
            </summary>
            <param name="radians">The angle in radians.</param>
            <returns>The angle in degrees.</returns>
            <remarks>
            This method uses double precission internally,
            though it returns single float
            Factor = 180 / pi
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.ToRadians(System.Single)">
            <summary>
            Converts degrees to radians.
            </summary>
            <param name="degrees">The angle in degrees.</param>
            <returns>The angle in radians.</returns>
            <remarks>
            This method uses double precission internally,
            though it returns single float
            Factor = pi / 180
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.WrapAngle(System.Single)">
            <summary>
            Reduces a given angle to a value between π and -π.
            </summary>
            <param name="angle">The angle to reduce, in radians.</param>
            <returns>The new angle, in radians.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.MathHelper.IsPowerOfTwo(System.Int32)">
            <summary>
            Determines if value is powered by two.
            </summary>
            <param name="value">A value.</param>
            <returns><c>true</c> if <c>value</c> is powered by two; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateShadow(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Plane)">
            <summary>
            Creates a Matrix that flattens geometry into a specified Plane as if casting a shadow from a specified light source. 
            </summary>
            <param name="lightDirection">A Vector3 specifying the direction from which the light that will cast the shadow is coming.</param>
            <param name="plane">The Plane onto which the new matrix should flatten geometry so as to cast a shadow.</param>
            <returns>A Matrix that can be used to flatten geometry onto the specified plane from the specified direction. </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.CreateShadow(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Plane@,Microsoft.Xna.Framework.Matrix@)">
            <summary>
            Creates a Matrix that flattens geometry into a specified Plane as if casting a shadow from a specified light source. 
            </summary>
            <param name="lightDirection">A Vector3 specifying the direction from which the light that will cast the shadow is coming.</param>
            <param name="plane">The Plane onto which the new matrix should flatten geometry so as to cast a shadow.</param>
            <param name="result">A Matrix that can be used to flatten geometry onto the specified plane from the specified direction. </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Matrix.FindDeterminants(Microsoft.Xna.Framework.Matrix@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Helper method for using the Laplace expansion theorem using two rows expansions to calculate major and 
            minor determinants of a 4x4 matrix. This method is used for inverting a matrix.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.PlaneHelper.ClassifyPoint(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Plane@)">
            <summary>
            Returns a value indicating what side (positive/negative) of a plane a point is
            </summary>
            <param name="point">The point to check with</param>
            <param name="plane">The plane to check against</param>
            <returns>Greater than zero if on the positive side, less than zero if on the negative size, 0 otherwise</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.PlaneHelper.PerpendicularDistance(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Plane@)">
            <summary>
            Returns the perpendicular distance from a point to a plane
            </summary>
            <param name="point">The point to check</param>
            <param name="plane">The place to check</param>
            <returns>The perpendicular distance from the point to the plane</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.TitleContainer.OpenStream(System.String)">
            <summary>
            Returns an open stream to an exsiting file in the title storage area.
            </summary>
            <param name="name">The filepath relative to the title storage area.</param>
            <returns>A open stream or null if the file is not found.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Quaternion)">
            <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
            <param name="vec">The vector to transform.</param>
            <param name="quat">The quaternion to rotate the vector by.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3@)">
            <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
            <param name="value">The vector to transform.</param>
            <param name="rotation">The quaternion to rotate the vector by.</param>
            <param name="result">The result of the operation.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3[],Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3[])">
            <summary>
            Transforms an array of vectors by a quaternion rotation.
            </summary>
            <param name="sourceArray">The vectors to transform</param>
            <param name="rotation">The quaternion to rotate the vector by.</param>
            <param name="destinationArray">The result of the operation.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Vector3.Transform(Microsoft.Xna.Framework.Vector3[],System.Int32,Microsoft.Xna.Framework.Quaternion@,Microsoft.Xna.Framework.Vector3[],System.Int32,System.Int32)">
            <summary>
            Transforms an array of vectors within a given range by a quaternion rotation.
            </summary>
            <param name="sourceArray">The vectors to transform.</param>
            <param name="sourceIndex">The starting index in the source array.</param>
            <param name="rotation">The quaternion to rotate the vector by.</param>
            <param name="destinationArray">The array to store the result of the operation.</param>
            <param name="destinationIndex">The starting index in the destination array.</param>
            <param name="length">The number of vectors to transform.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.AudioChannels">
            <summary>
            Represents how many channels are used in the audio data.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Audio.AudioChannels.Mono">
            <summary>Single channel.</summary> 
        </member>
        <member name="F:Microsoft.Xna.Framework.Audio.AudioChannels.Stereo">
            <summary>Two channels.</summary> 
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.AudioEmitter">
            <summary>
            Represents a 3D audio emitter. Used to simulate 3D audio effects.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioEmitter.#ctor">
            <summary>Initializes a new AudioEmitter instance.</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioEmitter.DopplerScale">
            <summary>Gets or sets a scale applied to the Doppler effect between the AudioEmitter and an AudioListener.</summary>
            <remarks>
            <para>Defaults to 1.0</para>
            <para>A value of 1.0 leaves the Doppler effect unmodified.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioEmitter.Forward">
            <summary>Gets or sets the emitter's forward vector.</summary>
            <remarks>
            <para>Defaults to Vector3.Forward. (new Vector3(0, 0, -1))</para>
            <para>Used with AudioListener.Velocity to calculate Doppler values.</para>
            <para>The Forward and Up values must be orthonormal.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioEmitter.Position">
            <summary>Gets or sets the position of this emitter.</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioEmitter.Up">
            <summary>Gets or sets the emitter's Up vector.</summary>
            <remarks>
            <para>Defaults to Vector3.Up. (new Vector3(0, -1, 1)).</para>
            <para>The Up and Forward vectors must be orthonormal.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioEmitter.Velocity">
            <summary>Gets or sets the emitter's velocity vector.</summary>
            <remarks>
            <para>Defaults to Vector3.Zero.</para>
            <para>This value is only used when calculating Doppler values.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.AudioListener">
            <summary>
            Represents a 3D audio listener. Used when simulating 3D Audio.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioListener.Forward">
            <summary>Gets or sets the listener's forward vector.</summary>
            <remarks>
            <para>Defaults to Vector3.Forward. (new Vector3(0, 0, -1))</para>
            <para>Used with AudioListener.Velocity and AudioEmitter.Velocity to calculate Doppler values.</para>
            <para>The Forward and Up vectors must be orthonormal.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioListener.Position">
            <summary>Gets or sets the listener's position.</summary>
            <remarks>
            Defaults to Vector3.Zero.
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioListener.Up">
            <summary>
            Gets or sets the listener's up vector..
            </summary>
            <remarks>
            <para>Defaults to Vector3.Up (New Vector3(0, -1, 0)).</para>
            <para>Used with AudioListener.Velocity and AudioEmitter.Velocity to calculate Doppler values.</para>
            <para>The values of the Forward and Up vectors must be orthonormal.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioListener.Velocity">
            <summary>Gets or sets the listener's velocity vector.</summary>
            <remarks>
            <para>Defaults to Vector3.Zero.</para>
            <para>Scaled by DopplerScale to calculate the Doppler effect value applied to a Cue.</para>
            <para>This value is only used to calculate Doppler values.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.InstancePlayLimitException">
            <summary>
            The exception thrown when the system attempts to play more SoundEffectInstances than allotted.
            </summary>
            <remarks>
            Most platforms have a hard limit on how many sounds can be played simultaneously. This exception is thrown when that limit is exceeded.
            </remarks>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.NoAudioHardwareException">
            <summary>
            The exception thrown when no audio hardware is present, or driver issues are detected.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.NoAudioHardwareException.#ctor(System.String)">
            <param name="msg">A message describing the error.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.NoAudioHardwareException.#ctor(System.String,System.Exception)">
            <param name="msg">A message describing the error.</param>
            <param name="innerException">The exception that is the underlying cause of the current exception. If not null, the current exception is raised in a try/catch block that handled the innerException.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.SoundEffect">
            <summary>Represents a loaded sound resource.</summary>
            <remarks>
            <para>A SoundEffect represents the buffer used to hold audio data and metadata. SoundEffectInstances are used to play from SoundEffects. Multiple SoundEffectinstance objects can be created and played from the same SoundEffect object.</para>
            <para>The only limit on the number of loaded SoundEffects is restricted by available memory. When a SoundEffect is disposed, all SoundEffectInstances created from it will become invalid.</para>
            <para>SoundEffect.Play() can be used for 'fire and forget' sounds. If advanced playback controls like volume or pitch is required, use SoundEffect.CreateInstance().</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.#ctor(System.Byte[],System.Int32,Microsoft.Xna.Framework.Audio.AudioChannels)">
            <param name="buffer">Buffer containing PCM wave data.</param>
            <param name="sampleRate">Sample rate, in Hertz (Hz)</param>
            <param name="channels">Number of channels (mono or stereo).</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.#ctor(System.Byte[],System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Audio.AudioChannels,System.Int32,System.Int32)">
            <param name="buffer">Buffer containing PCM wave data.</param>
            <param name="offset">Offset, in bytes, to the starting position of the audio data.</param>
            <param name="count">Amount, in bytes, of audio data.</param>
            <param name="sampleRate">Sample rate, in Hertz (Hz)</param>
            <param name="channels">Number of channels (mono or stereo).</param>
            <param name="loopStart">The position, in samples, where the audio should begin looping.</param>
            <param name="loopLength">The duration, in samples, that audio should loop over.</param>
            <remarks>Use SoundEffect.GetSampleDuration() to convert time to samples.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Microsoft.Xna.Framework.Audio.SoundEffect"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.CreateInstance">
            <summary>
            Creates a new SoundEffectInstance for this SoundEffect.
            </summary>
            <returns>A new SoundEffectInstance for this SoundEffect.</returns>
            <remarks>Creating a SoundEffectInstance before calling SoundEffectInstance.Play() allows you to access advanced playback features, such as volume, pitch, and 3D positioning.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.FromStream(System.IO.Stream)">
            <summary>
            Creates a SoundEffect object based on the specified data stream.
            </summary>
            <param name="s">Stream object containing PCM wave data.</param>
            <returns>A new SoundEffect object.</returns>
            <remarks>The Stream object must point to the head of a valid PCM wave file. Also, this wave file must be in the RIFF bitstream format.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.GetSampleDuration(System.Int32,System.Int32,Microsoft.Xna.Framework.Audio.AudioChannels)">
            <summary>
            Gets the TimeSpan representation of a single sample.
            </summary>
            <param name="sizeInBytes">Size, in bytes, of audio data.</param>
            <param name="sampleRate">Sample rate, in Hertz (Hz). Must be between 8000 Hz and 48000 Hz</param>
            <param name="channels">Number of channels in the audio data.</param>
            <returns>TimeSpan object that represents the calculated sample duration.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.GetSampleSizeInBytes(System.TimeSpan,System.Int32,Microsoft.Xna.Framework.Audio.AudioChannels)">
            <summary>
            Gets the size of a sample from a TimeSpan.
            </summary>
            <param name="duration">TimeSpan object that contains the sample duration.</param>
            <param name="sampleRate">Sample rate, in Hertz (Hz), of audio data. Must be between 8,000 and 48,000 Hz.</param>
            <param name="channels">Number of channels in the audio data.</param>
            <returns>Size of a single sample of audio data.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.Play">
            <summary>Gets an internal SoundEffectInstance and plays it.</summary>
            <returns>True if a SoundEffectInstance was successfully played, false if not.</returns>
            <remarks>
            <para>Play returns false if more SoundEffectInstances are currently playing then the platform allows.</para>
            <para>To loop a sound or apply 3D effects, call SoundEffect.CreateInstance() and SoundEffectInstance.Play() instead.</para>
            <para>SoundEffectInstances used by SoundEffect.Play() are pooled internally.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.Play(System.Single,System.Single,System.Single)">
            <summary>Gets an internal SoundEffectInstance and plays it with the specified volume, pitch, and panning.</summary>
            <returns>True if a SoundEffectInstance was successfully created and played, false if not.</returns>
            <param name="volume">Volume, ranging from 0.0 (silence) to 1.0 (full volume). Volume during playback is scaled by SoundEffect.MasterVolume.</param>
            <param name="pitch">Pitch adjustment, ranging from -1.0 (down an octave) to 0.0 (no change) to 1.0 (up an octave).</param>
            <param name="pan">Panning, ranging from -1.0 (left speaker) to 0.0 (centered), 1.0 (right speaker).</param>
            <remarks>
            <para>Play returns false if more SoundEffectInstances are currently playing then the platform allows.</para>
            <para>To apply looping or simulate 3D audio, call SoundEffect.CreateInstance() and SoundEffectInstance.Play() instead.</para>
            <para>SoundEffectInstances used by SoundEffect.Play() are pooled internally.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.GetPooledInstance">
            <summary>
            Returns a sound effect instance from the pool or null if none are available.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.Dispose">
            <summary>Releases the resources held by this <see cref="T:Microsoft.Xna.Framework.Audio.SoundEffect"/>.</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffect.Dispose(System.Boolean)">
            <summary>
            Releases the resources held by this <see cref="T:Microsoft.Xna.Framework.Audio.SoundEffect"/>.
            </summary>
            <param name="disposing">If set to <c>true</c>, Dispose was called explicitly.</param>
            <remarks>If the disposing parameter is true, the Dispose method was called explicitly. This
            means that managed objects referenced by this instance should be disposed or released as
            required.  If the disposing parameter is false, Dispose was called by the finalizer and
            no managed objects should be touched because we do not know if they are still valid or
            not at that time.  Unmanaged resources should always be released.</remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.Duration">
            <summary>Gets the duration of the SoundEffect.</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.Name">
            <summary>Gets or sets the asset name of the SoundEffect.</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.MasterVolume">
            <summary>
            Gets or sets the master volume scale applied to all SoundEffectInstances.
            </summary>
            <remarks>
            <para>Each SoundEffectInstance has its own Volume property that is independent to SoundEffect.MasterVolume. During playback SoundEffectInstance.Volume is multiplied by SoundEffect.MasterVolume.</para>
            <para>This property is used to adjust the volume on all current and newly created SoundEffectInstances. The volume of an individual SoundEffectInstance can be adjusted on its own.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.DistanceScale">
            <summary>
            Gets or sets the scale of distance calculations.
            </summary>
            <remarks> 
            <para>DistanceScale defaults to 1.0 and must be greater than 0.0.</para>
            <para>Higher values reduce the rate of falloff between the sound and listener.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.DopplerScale">
            <summary>
            Gets or sets the scale of Doppler calculations applied to sounds.
            </summary>
            <remarks>
            <para>DopplerScale defaults to 1.0 and must be greater or equal to 0.0</para>
            <para>Affects the relative velocity of emitters and listeners.</para>
            <para>Higher values more dramatically shift the pitch for the given relative velocity of the emitter and listener.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.SpeedOfSound">
            <summary>Returns the speed of sound used when calculating the Doppler effect..</summary>
            <remarks>
            <para>Defaults to 343.5. Value is measured in meters per second.</para>
            <para>Has no effect on distance attenuation.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffect.IsDisposed">
            <summary>Indicates whether the object is disposed.</summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.SoundEffectInstance">
            <summary>Represents a single instance of a playing, paused, or stopped sound.</summary>
            <remarks>
            <para>SoundEffectInstances are created through SoundEffect.CreateInstance() and used internally by SoundEffect.Play()</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Microsoft.Xna.Framework.Audio.SoundEffectInstance"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Apply3D(Microsoft.Xna.Framework.Audio.AudioListener,Microsoft.Xna.Framework.Audio.AudioEmitter)">
            <summary>Applies 3D positioning to the SoundEffectInstance using a single listener.</summary>
            <param name="listener">Data about the listener.</param>
            <param name="emitter">Data about the source of emission.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Apply3D(Microsoft.Xna.Framework.Audio.AudioListener[],Microsoft.Xna.Framework.Audio.AudioEmitter)">
            <summary>Applies 3D positioning to the SoundEffectInstance using multiple listeners.</summary>
            <param name="listeners">Data about each listener.</param>
            <param name="emitter">Data about the source of emission.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Pause">
            <summary>Pauses playback of a SoundEffectInstance.</summary>
            <remarks>Paused instances can be resumed with SoundEffectInstance.Play() or SoundEffectInstance.Resume().</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Play">
            <summary>Plays or resumes a SoundEffectInstance.</summary>
            <remarks>Throws an exception if more sounds are playing than the platform allows.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Resume">
            <summary>Resumes playback for a SoundEffectInstance.</summary>
            <remarks>Only has effect on a SoundEffectInstance in a paused state.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Stop">
            <summary>Immediately stops playing a SoundEffectInstance.</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Stop(System.Boolean)">
            <summary>Stops playing a SoundEffectInstance, either immediately or as authored.</summary>
            <param name="immediate">Determined whether the sound stops immediately, or after playing its release phase and/or transitions.</param>
            <remarks>Stopping a sound with the immediate argument set to false will allow it to play any release phases, such as fade, before coming to a stop.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Dispose">
            <summary>Releases the resources held by this <see cref="T:Microsoft.Xna.Framework.Audio.SoundEffectInstance"/>.</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Dispose(System.Boolean)">
            <summary>
            Releases the resources held by this <see cref="T:Microsoft.Xna.Framework.Audio.SoundEffectInstance"/>.
            </summary>
            <param name="disposing">If set to <c>true</c>, Dispose was called explicitly.</param>
            <remarks>If the disposing parameter is true, the Dispose method was called explicitly. This
            means that managed objects referenced by this instance should be disposed or released as
            required.  If the disposing parameter is false, Dispose was called by the finalizer and
            no managed objects should be touched because we do not know if they are still valid or
            not at that time.  Unmanaged resources should always be released.</remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffectInstance.IsLooped">
            <summary>Enables or Disables whether the SoundEffectInstance should repeat after playback.</summary>
            <remarks>This value has no effect on an already playing sound.</remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Pan">
            <summary>Gets or sets the pan, or speaker balance..</summary>
            <value>Pan value ranging from -1.0 (left speaker) to 0.0 (centered), 1.0 (right speaker). Values outside of this range will throw an exception.</value>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Pitch">
            <summary>Gets or sets the pitch adjustment.</summary>
            <value>Pitch adjustment, ranging from -1.0 (down an octave) to 0.0 (no change) to 1.0 (up an octave). Values outside of this range will throw an Exception.</value>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffectInstance.Volume">
            <summary>Gets or sets the volume of the SoundEffectInstance.</summary>
            <value>Volume, ranging from 0.0 (silence) to 1.0 (full volume). Volume during playback is scaled by SoundEffect.MasterVolume.</value>
            <remarks>
            This is the volume relative to SoundEffect.MasterVolume. Before playback, this Volume property is multiplied by SoundEffect.MasterVolume when determining the final mix volume.
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffectInstance.State">
            <summary>Gets the SoundEffectInstance's current playback state.</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffectInstance.IsDisposed">
            <summary>Indicates whether the object is disposed.</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstancePool.Add(Microsoft.Xna.Framework.Audio.SoundEffectInstance)">
            <summary>
            Add the specified instance to the pool if it is a pooled instance and removes it from the
            list of playing instances.
            </summary>
            <param name="inst">The SoundEffectInstance</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstancePool.Remove(Microsoft.Xna.Framework.Audio.SoundEffectInstance)">
            <summary>
            Adds the SoundEffectInstance to the list of playing instances.
            </summary>
            <param name="inst">The SoundEffectInstance to add to the playing list.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstancePool.GetInstance">
            <summary>
            Returns a pooled SoundEffectInstance if one is available, or allocates a new
            SoundEffectInstance if the pool is empty.
            </summary>
            <returns>The SoundEffectInstance.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstancePool.Update">
            <summary>
            Iterates the list of playing instances, returning them to the pool if they
            have stopped playing.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundEffectInstancePool.UpdateVolumes">
            <summary>
            Updates the volumes of all currently playing instances. Used when SoundEffect.MasterVolume is changed.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.SoundEffectInstancePool.SoundsAvailable">
            <summary>
            Gets a value indicating whether the platform has capacity for more sounds to be played at this time.
            </summary>
            <value><c>true</c> if more sounds can be played; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.SoundState">
            <summary>Described the playback state of a SoundEffectInstance.</summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Audio.SoundState.Playing">
            <summary>The SoundEffectInstance is currently playing.</summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Audio.SoundState.Paused">
            <summary>The SoundEffectInstance is currently paused.</summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Audio.SoundState.Stopped">
            <summary>The SoundEffectInstance is currently stopped.</summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.AudioCategory">
            <summary>
            Provides functionality for manipulating multiple sounds at a time.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioCategory.Pause">
            <summary>
            Pauses all associated sounds.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioCategory.Resume">
            <summary>
            Resumes all associated paused sounds.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioCategory.Stop(Microsoft.Xna.Framework.Audio.AudioStopOptions)">
            <summary>
            Stops all associated sounds.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioCategory.op_Equality(Microsoft.Xna.Framework.Audio.AudioCategory,Microsoft.Xna.Framework.Audio.AudioCategory)">
            <summary>
            Determines whether two AudioCategory instances are equal.
            </summary>
            <param name="first">First AudioCategory instance to compare.</param>
            <param name="second">Second AudioCategory instance to compare.</param>
            <returns>true if the objects are equal or false if they aren't.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioCategory.op_Inequality(Microsoft.Xna.Framework.Audio.AudioCategory,Microsoft.Xna.Framework.Audio.AudioCategory)">
            <summary>
            Determines whether two AudioCategory instances are not equal.
            </summary>
            <param name="first">First AudioCategory instance to compare.</param>
            <param name="second">Second AudioCategory instance to compare.</param>
            <returns>true if the objects are not equal or false if they are.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioCategory.Equals(Microsoft.Xna.Framework.Audio.AudioCategory)">
            <summary>
            Determines whether two AudioCategory instances are equal.
            </summary>
            <param name="other">AudioCategory to compare with this instance.</param>
            <returns>true if the objects are equal or false if they aren't</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioCategory.Equals(System.Object)">
            <summary>
            Determines whether two AudioCategory instances are equal.
            </summary>
            <param name="obj">Object to compare with this instance.</param>
            <returns>true if the objects are equal or false if they aren't.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioCategory.GetHashCode">
            <summary>
            Gets the hash code for this instance.
            </summary>
            <returns>Hash code for this object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioCategory.ToString">
            <summary>
            Returns the name of this AudioCategory
            </summary>
            <returns>Friendly name of the AudioCategory</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.AudioCategory.Name">
            <summary>
            Gets the category's friendly name.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.AudioEngine">
            <summary>
            Class used to create and manipulate code audio objects.
            </summary> 
        </member>
        <member name="F:Microsoft.Xna.Framework.Audio.AudioEngine.ContentVersion">
            <summary>
            Specifies the current content version.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioEngine.#ctor(System.String)">
            <param name="settingsFile">Path to a XACT settings file.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioEngine.#ctor(System.String,System.TimeSpan,System.String)">
            <param name="settingsFile">Path to a XACT settings file.</param>
            <param name="lookAheadTime">Determines how many milliseconds the engine will look ahead when determing when to transition to another sound.</param>
            <param name="rendererId">A string that specifies the audio renderer to use.</param>
            <remarks>For the best results, use a lookAheadTime of 250 milliseconds or greater.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioEngine.Update">
            <summary>Performs periodic work required by the audio engine.</summary>
            <remarks>Must be called at least once per frame.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioEngine.GetCategory(System.String)">
            <summary>Returns an audio category by name.</summary>
            <param name="name">Friendly name of the category to get.</param>
            <returns>The AudioCategory with a matching name. Throws an exception if not found.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioEngine.GetGlobalVariable(System.String)">
            <summary>Gets the value of a global variable.</summary>
            <param name="name">Friendly name of the variable.</param>
            <returns>float value of the queried variable.</returns>
            <remarks>A global variable has global scope. It can be accessed by all code within a project.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.AudioEngine.SetGlobalVariable(System.String,System.Single)">
            <summary>Sets the value of a global variable.</summary>
            <param name="name">Friendly name of the variable.</param>
            <param name="value">Value of the global variable.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.AudioStopOptions">
            <summary>Controls how Cue objects should cease playback when told to stop.</summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Audio.AudioStopOptions.AsAuthored">
            <summary>Stop normally, playing any pending release phases or transitions.</summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Audio.AudioStopOptions.Immediate">
            <summary>Immediately stops the cue, ignoring any pending release phases or transitions.</summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.Cue">
            <summary>Manages the playback of a sound or set of sounds.</summary>
            <remarks>
            <para>Cues are comprised of one or more sounds.</para>
            <para>Cues also define specific properties such as pitch or volume.</para>
            <para>Cues are referenced through SoundBank objects.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Cue.Pause">
            <summary>Pauses playback.</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Cue.Play">
            <summary>Requests playback of a prepared or preparing Cue.</summary>
            <remarks>Calling Play when the Cue already is playing can result in an InvalidOperationException.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Cue.Resume">
            <summary>Resumes playback of a paused Cue.</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Cue.Stop(Microsoft.Xna.Framework.Audio.AudioStopOptions)">
            <summary>Stops playback of a Cue.</summary>
            <param name="options">Specifies if the sound should play any pending release phases or transitions before stopping.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Cue.SetVariable(System.String,System.Single)">
            <summary>
            Sets the value of a cue-instance variable based on its friendly name.
            </summary>
            <param name="name">Friendly name of the variable to set.</param>
            <param name="value">Value to assign to the variable.</param>
            <remarks>The friendly name is a value set from the designer.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Cue.GetVariable(System.String)">
            <summary>Gets a cue-instance variable value based on its friendly name.</summary>
            <param name="name">Friendly name of the variable.</param>
            <returns>Value of the variable.</returns>
            <remarks>
            <para>Cue-instance variables are useful when multiple instantiations of a single cue (and its associated sounds) are required (for example, a "car" cue where there may be more than one car at any given time). While a global variable allows multiple audio elements to be controlled in unison, a cue instance variable grants discrete control of each instance of a cue, even for each copy of the same cue.</para>
            <para>The friendly name is a value set from the designer.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Cue.Apply3D(Microsoft.Xna.Framework.Audio.AudioListener,Microsoft.Xna.Framework.Audio.AudioEmitter)">
            <summary>Updates the simulated 3D Audio settings calculated between an AudioEmitter and AudioListener.</summary>
            <param name="listener">The listener to calculate.</param>
            <param name="emitter">The emitter to calculate.</param>
            <remarks>
            <para>This must be called before Play().</para>
            <para>Calling this method automatically converts the sound to monoaural and sets the speaker mix for any sound played by this cue to a value calculated with the listener's and emitter's positions. Any stereo information in the sound will be discarded.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.Cue.Dispose">
            <summary>Immediately releases any unmanaged resources used by this object.</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.Cue.IsPaused">
            <summary>Indicates whether or not the cue is currently paused.</summary>
            <remarks>IsPlaying and IsPaused both return true if a cue is paused while playing.</remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.Cue.IsPlaying">
            <summary>Indicates whether or not the cue is currently playing.</summary>
            <remarks>IsPlaying and IsPaused both return true if a cue is paused while playing.</remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.Cue.IsStopped">
            <summary>Indicates whether or not the cue is currently stopped.</summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.Cue.Name">
            <summary>Gets the friendly name of the cue.</summary>
            <remarks>The friendly name is a value set from the designer.</remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Audio.Cue.IsDisposed">
            <summary>Indicateds whether or not the object has been disposed.</summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.SoundBank">
            <summary>Represents a collection of Cues.</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundBank.#ctor(Microsoft.Xna.Framework.Audio.AudioEngine,System.String)">
            <param name="audioEngine">AudioEngine that will be associated with this sound bank.</param>
            <param name="fileName">Path to a .xsb SoundBank file.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundBank.GetCue(System.String)">
            <summary>
            Returns a pooled Cue object.
            </summary>
            <param name="name">Friendly name of the cue to get.</param>
            <returns>a unique Cue object from a pool.</returns>
            <remarks>
            <para>Cue instances are unique, even when sharing the same name. This allows multiple instances to simultaneously play.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundBank.PlayCue(System.String)">
            <summary>
            Plays a cue.
            </summary>
            <param name="name">Name of the cue to play.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.SoundBank.Dispose">
            <summary>
            Immediately releases any unmanaged resources used by this object.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Audio.WaveBank">
            <summary>Represents a collection of wave files.</summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.WaveBank.#ctor(Microsoft.Xna.Framework.Audio.AudioEngine,System.String)">
            <param name="audioEngine">Instance of the AudioEngine to associate this wave bank with.</param>
            <param name="nonStreamingWaveBankFilename">Path to the .xwb file to load.</param>
            <remarks>This constructor immediately loads all wave data into memory at once.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Audio.WaveBank.#ctor(Microsoft.Xna.Framework.Audio.AudioEngine,System.String,System.Int32,System.Int16)">
            <param name="audioEngine">Instance of the AudioEngine to associate this wave bank with.</param>
            <param name="streamingWaveBankFilename">Path to the .xwb to stream from.</param>
            <param name="offset">DVD sector-aligned offset within the wave bank data file.</param>
            <param name="packetsize">Stream packet size, in sectors, to use for each stream. The minimum value is 2.</param>
            <remarks>
            <para>This constructor streams wave data as needed.</para>
            <para>Note that packetsize is in sectors, which is 2048 bytes.</para>
            <para>AudioEngine.Update() must be called at least once before using data from a streaming wave bank.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentManager.LoadedAssets">
            <summary>
            Virtual property to allow a derived ContentManager to have it's assets reloaded
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ExternalReferenceReader">
            <summary>
            External reference reader, provided for compatibility with XNA Framework built content
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentSerializerCollectionItemNameAttribute">
            <summary>
            This is used to specify the XML element name to use for each item in a collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentSerializerCollectionItemNameAttribute.#ctor(System.String)">
            <summary>
            Creates an instance of the attribute.
            </summary>
            <param name="collectionItemName">The XML element name to use for each item in the collection.</param>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerCollectionItemNameAttribute.CollectionItemName">
            <summary>
            The XML element name to use for each item in the collection.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentSerializerRuntimeTypeAttribute">
            <summary>
            This is used to specify the type to use when deserializing this object at runtime.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentSerializerRuntimeTypeAttribute.#ctor(System.String)">
            <summary>
            Creates an instance of the attribute.
            </summary>
            <param name="runtimeType">The name of the type to use at runtime.</param>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerRuntimeTypeAttribute.RuntimeType">
            <summary>
            The name of the type to use at runtime.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Content.ContentSerializerTypeVersionAttribute">
            <summary>
            This is used to specify the version when deserializing this object at runtime.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentSerializerTypeVersionAttribute.#ctor(System.Int32)">
            <summary>
            Creates an instance of the attribute.
            </summary>
            <param name="typeVersion">The version passed to the type at runtime.</param>
        </member>
        <member name="P:Microsoft.Xna.Framework.Content.ContentSerializerTypeVersionAttribute.TypeVersion">
            <summary>
            The version passed to the type at runtime.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.PrepareType(System.String)">
            <summary>
            Removes Version, Culture and PublicKeyToken from a type string.
            </summary>
            <remarks>
            Supports multiple generic types (e.g. Dictionary&lt;TKey,TValue&gt;) and nested generic types (e.g. List&lt;List&lt;int&gt;&gt;).
            </remarks> 
            <param name="type">
            A <see cref="T:System.String"/>
            </param>
            <returns>
            A <see cref="T:System.String"/>
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Content.ContentTypeReaderManager.AddTypeCreator(System.String,System.Func{Microsoft.Xna.Framework.Content.ContentTypeReader})">
            <summary>
            Adds the type creator.
            </summary>
            <param name='typeString'>
            Type string.
            </param>
            <param name='createFunction'>
            Create function.
            </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.GraphicsDeviceManager.ResetClientBounds">
             <summary>
             This method is used by MonoGame Android to adjust the game's drawn to area to fill
             as much of the screen as possible whilst retaining the aspect ratio inferred from
             aspectRatio = (PreferredBackBufferWidth / PreferredBackBufferHeight)
            
             NOTE: this is a hack that should be removed if proper back buffer to screen scaling
             is implemented. To disable it's effect, in the game's constructor use:
            
                 graphics.IsFullScreen = true;
                 graphics.PreferredBackBufferHeight = Window.ClientBounds.Height;
                 graphics.PreferredBackBufferWidth = Window.ClientBounds.Width;
            
             </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.AlphaTestEffect">
            <summary>
            Built-in effect that supports alpha testing.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsResource.GraphicsDeviceResetting">
            <summary>
            Called before the device is reset. Allows graphics resources to 
            invalidate their state so they can be recreated after the device reset.
            Warning: This may be called after a call to Dispose() up until
            the resource is garbage collected.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsResource.DisposeAll">
            <summary>
            Dispose all graphics resources remaining in the global resources list.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsResource.Dispose(System.Boolean)">
            <summary>
            The method that derived classes should override to implement disposing of managed and native resources.
            </summary>
            <param name="disposing">True if managed objects should be disposed.</param>
            <remarks>Native resources should always be released regardless of the value of the disposing parameter.</remarks>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Effect.MGFXHeader">
            <summary>
            The MonoGame Effect file format header identifier.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Effect.MGFXVersion">
            <summary>
            The current MonoGame Effect file format versions
            used to detect old packaged content.
            </summary>
            <remarks>
            We should avoid supporting old versions for very long if at all 
            as users should be rebuilding content when packaging their game.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Effect.Clone(Microsoft.Xna.Framework.Graphics.Effect)">
            <summary>
            Clone the source into this existing object.
            </summary>
            <remarks>
            Note this is not overloaded in derived classes on purpose.  This is
            only a reason this exists is for caching effects.
            </remarks>
            <param name="cloneSource">The source effect to clone from.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Effect.Clone">
            <summary>
            Returns a deep copy of the effect where immutable types 
            are shared and mutable data is duplicated.
            </summary>
            <remarks>
            See "Cloning an Effect" in MSDN:
            http://msdn.microsoft.com/en-us/library/windows/desktop/ff476138(v=vs.85).aspx
            </remarks>
            <returns>The cloned effect.</returns>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Effect.EffectCache">
            <summary>
            The cache of effects from unique byte streams.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.IEffectFog">
            <summary>
            The common effect fog rendering parameters.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IEffectFog.FogColor">
            <summary>
            The floating point fog color.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnabled">
            <summary>
            Used to toggle the rendering of fog.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IEffectFog.FogEnd">
            <summary>
            The world space distance from the camera at which fogging is fully applied.
            </summary>
            <remarks>
            FogEnd should be greater than FogStart.  If FogEnd and FogStart 
            are the same value everything is fully fogged.
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IEffectFog.FogStart">
            <summary>
            The world space distance from the camera at which fogging begins.
            </summary>
            <remarks>
            FogStart should be less than FogEnd.  If FogEnd and FogStart are the
            same value everything is fully fogged.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Creates a new AlphaTestEffect with default parameter settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.#ctor(Microsoft.Xna.Framework.Graphics.AlphaTestEffect)">
            <summary>
            Creates a new AlphaTestEffect by cloning parameter settings from an existing instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.Clone">
            <summary>
            Creates a clone of the current AlphaTestEffect instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.CacheEffectParameters">
            <summary>
            Looks up shortcut references to our effect parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.OnApply">
            <summary>
            Lazily computes derived parameter values immediately before applying the effect.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.World">
            <summary>
            Gets or sets the world matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.View">
            <summary>
            Gets or sets the view matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.Projection">
            <summary>
            Gets or sets the projection matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.DiffuseColor">
            <summary>
            Gets or sets the material diffuse color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.Alpha">
            <summary>
            Gets or sets the material alpha.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.FogEnabled">
            <summary>
            Gets or sets the fog enable flag.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.FogStart">
            <summary>
            Gets or sets the fog start distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.FogEnd">
            <summary>
            Gets or sets the fog end distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.FogColor">
            <summary>
            Gets or sets the fog color.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.Texture">
            <summary>
            Gets or sets the current texture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.VertexColorEnabled">
            <summary>
            Gets or sets whether vertex color is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.AlphaFunction">
            <summary>
            Gets or sets the alpha compare function (default Greater).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.AlphaTestEffect.ReferenceAlpha">
            <summary>
            Gets or sets the reference alpha value (default 0).
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.BasicEffect">
            <summary>
            Built-in effect that supports optional texturing, vertex coloring, fog, and lighting.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.IEffectLights">
            <summary>
            The common effect light rendering parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.IEffectLights.EnableDefaultLighting">
            <summary>
            Initializes the lights to the standard key/fill/back lighting rig.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IEffectLights.AmbientLightColor">
            <summary>
            The floating point ambient light color.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight0">
            <summary>
            Returns the first directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight1">
            <summary>
            Returns the second directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IEffectLights.DirectionalLight2">
            <summary>
            Returns the third directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IEffectLights.LightingEnabled">
            <summary>
            Toggles the rendering of lighting.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BasicEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Creates a new BasicEffect with default parameter settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BasicEffect.#ctor(Microsoft.Xna.Framework.Graphics.BasicEffect)">
            <summary>
            Creates a new BasicEffect by cloning parameter settings from an existing instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BasicEffect.Clone">
            <summary>
            Creates a clone of the current BasicEffect instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BasicEffect.EnableDefaultLighting">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BasicEffect.CacheEffectParameters(Microsoft.Xna.Framework.Graphics.BasicEffect)">
            <summary>
            Looks up shortcut references to our effect parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BasicEffect.OnApply">
            <summary>
            Lazily computes derived parameter values immediately before applying the effect.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.World">
            <summary>
            Gets or sets the world matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.View">
            <summary>
            Gets or sets the view matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.Projection">
            <summary>
            Gets or sets the projection matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.DiffuseColor">
            <summary>
            Gets or sets the material diffuse color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.EmissiveColor">
            <summary>
            Gets or sets the material emissive color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularColor">
            <summary>
            Gets or sets the material specular color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.SpecularPower">
            <summary>
            Gets or sets the material specular power.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.Alpha">
            <summary>
            Gets or sets the material alpha.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.LightingEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.PreferPerPixelLighting">
            <summary>
            Gets or sets the per-pixel lighting prefer flag.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.AmbientLightColor">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight0">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight1">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.DirectionalLight2">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.FogStart">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.FogEnd">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.FogColor">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.TextureEnabled">
            <summary>
            Gets or sets whether texturing is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.Texture">
            <summary>
            Gets or sets the current texture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BasicEffect.VertexColorEnabled">
            <summary>
            Gets or sets whether vertex color is enabled.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.DualTextureEffect">
            <summary>
            Built-in effect that supports two-layer multitexturing.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.DualTextureEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Creates a new DualTextureEffect with default parameter settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.DualTextureEffect.#ctor(Microsoft.Xna.Framework.Graphics.DualTextureEffect)">
            <summary>
            Creates a new DualTextureEffect by cloning parameter settings from an existing instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.DualTextureEffect.Clone">
            <summary>
            Creates a clone of the current DualTextureEffect instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.DualTextureEffect.CacheEffectParameters">
            <summary>
            Looks up shortcut references to our effect parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.DualTextureEffect.OnApply">
            <summary>
            Lazily computes derived parameter values immediately before applying the effect.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.World">
            <summary>
            Gets or sets the world matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.View">
            <summary>
            Gets or sets the view matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.Projection">
            <summary>
            Gets or sets the projection matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.DiffuseColor">
            <summary>
            Gets or sets the material diffuse color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.Alpha">
            <summary>
            Gets or sets the material alpha.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.FogEnabled">
            <summary>
            Gets or sets the fog enable flag.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.FogStart">
            <summary>
            Gets or sets the fog start distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.FogEnd">
            <summary>
            Gets or sets the fog end distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.FogColor">
            <summary>
            Gets or sets the fog color.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.Texture">
            <summary>
            Gets or sets the current base texture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.Texture2">
            <summary>
            Gets or sets the current overlay texture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.DualTextureEffect.VertexColorEnabled">
            <summary>
            Gets or sets whether vertex color is enabled.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.EffectDirtyFlags">
            <summary>
            Track which effect parameters need to be recomputed during the next OnApply.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.EffectHelpers">
            <summary>
            Helper code shared between the various built-in effects.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EffectHelpers.EnableDefaultLighting(Microsoft.Xna.Framework.Graphics.DirectionalLight,Microsoft.Xna.Framework.Graphics.DirectionalLight,Microsoft.Xna.Framework.Graphics.DirectionalLight)">
            <summary>
            Sets up the standard key/fill/back lighting rig.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EffectHelpers.SetWorldViewProjAndFog(Microsoft.Xna.Framework.Graphics.EffectDirtyFlags,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,System.Boolean,System.Single,System.Single,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter)">
            <summary>
            Lazily recomputes the world+view+projection matrix and
            fog vector based on the current effect parameter settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EffectHelpers.SetFogVector(Microsoft.Xna.Framework.Matrix@,System.Single,System.Single,Microsoft.Xna.Framework.Graphics.EffectParameter)">
            <summary>
            Sets a vector which can be dotted with the object space vertex position to compute fog amount.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EffectHelpers.SetLightingMatrices(Microsoft.Xna.Framework.Graphics.EffectDirtyFlags,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Matrix@,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter)">
            <summary>
            Lazily recomputes the world inverse transpose matrix and
            eye position based on the current effect parameter settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EffectHelpers.SetMaterialColor(System.Boolean,System.Single,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Vector3@,Microsoft.Xna.Framework.Graphics.EffectParameter,Microsoft.Xna.Framework.Graphics.EffectParameter)">
            <summary>
            Sets the diffuse/emissive/alpha material color parameters.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EffectParameter.NextStateKey">
            <summary>
            The next state key used when an effect parameter
            is updated by any of the 'set' methods.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EffectParameter.StateKey">
            <summary>
            The current state key which is used to detect
            if the parameter value has been changed.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect">
            <summary>
            Built-in effect that supports environment mapping.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Creates a new EnvironmentMapEffect with default parameter settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.#ctor(Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect)">
            <summary>
            Creates a new EnvironmentMapEffect by cloning parameter settings from an existing instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Clone">
            <summary>
            Creates a clone of the current EnvironmentMapEffect instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnableDefaultLighting">
            <summary>
            Sets up the standard key/fill/back lighting rig.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.CacheEffectParameters(Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect)">
            <summary>
            Looks up shortcut references to our effect parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.OnApply">
            <summary>
            Lazily computes derived parameter values immediately before applying the effect.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.World">
            <summary>
            Gets or sets the world matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.View">
            <summary>
            Gets or sets the view matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Projection">
            <summary>
            Gets or sets the projection matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DiffuseColor">
            <summary>
            Gets or sets the material diffuse color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EmissiveColor">
            <summary>
            Gets or sets the material emissive color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Alpha">
            <summary>
            Gets or sets the material alpha.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.AmbientLightColor">
            <summary>
            Gets or sets the ambient light color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight0">
            <summary>
            Gets the first directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight1">
            <summary>
            Gets the second directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.DirectionalLight2">
            <summary>
            Gets the third directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnabled">
            <summary>
            Gets or sets the fog enable flag.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogStart">
            <summary>
            Gets or sets the fog start distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogEnd">
            <summary>
            Gets or sets the fog end distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FogColor">
            <summary>
            Gets or sets the fog color.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Texture">
            <summary>
            Gets or sets the current texture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMap">
            <summary>
            Gets or sets the current environment map texture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapAmount">
            <summary>
            Gets or sets the amount of the environment map RGB that will be blended over 
            the base texture. Range 0 to 1, default 1. If set to zero, the RGB channels 
            of the environment map will completely ignored (but the environment map alpha 
            may still be visible if EnvironmentMapSpecular is greater than zero).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.EnvironmentMapSpecular">
            <summary>
            Gets or sets the amount of the environment map alpha channel that will 
            be added to the base texture. Range 0 to 1, default 0. This can be used 
            to implement cheap specular lighting, by encoding one or more specular 
            highlight patterns into the environment map alpha channel, then setting 
            EnvironmentMapSpecular to the desired specular light color.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.FresnelFactor">
            <summary>
            Gets or sets the Fresnel factor used for the environment map blending. 
            Higher values make the environment map only visible around the silhouette 
            edges of the object, while lower values make it visible everywhere. 
            Setting this property to 0 disables Fresnel entirely, making the 
            environment map equally visible regardless of view angle. The default is 
            1. Fresnel only affects the environment map RGB (the intensity of which is 
            controlled by EnvironmentMapAmount). The alpha contribution (controlled by 
            EnvironmentMapSpecular) is not affected by the Fresnel setting.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.EnvironmentMapEffect.Microsoft#Xna#Framework#Graphics#IEffectLights#LightingEnabled">
            <summary>
            This effect requires lighting, so we explicitly implement
            IEffectLights.LightingEnabled, and do not allow turning it off.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.SkinnedEffect">
            <summary>
            Built-in effect for rendering skinned character models.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.SetBoneTransforms(Microsoft.Xna.Framework.Matrix[])">
            <summary>
            Sets an array of skinning bone transform matrices.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.GetBoneTransforms(System.Int32)">
            <summary>
            Gets a copy of the current skinning bone transform matrices.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Creates a new SkinnedEffect with default parameter settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.#ctor(Microsoft.Xna.Framework.Graphics.SkinnedEffect)">
            <summary>
            Creates a new SkinnedEffect by cloning parameter settings from an existing instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.Clone">
            <summary>
            Creates a clone of the current SkinnedEffect instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.EnableDefaultLighting">
            <summary>
            Sets up the standard key/fill/back lighting rig.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.CacheEffectParameters(Microsoft.Xna.Framework.Graphics.SkinnedEffect)">
            <summary>
            Looks up shortcut references to our effect parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SkinnedEffect.OnApply">
            <summary>
            Lazily computes derived parameter values immediately before applying the effect.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.World">
            <summary>
            Gets or sets the world matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.View">
            <summary>
            Gets or sets the view matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.Projection">
            <summary>
            Gets or sets the projection matrix.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.DiffuseColor">
            <summary>
            Gets or sets the material diffuse color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.EmissiveColor">
            <summary>
            Gets or sets the material emissive color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.SpecularColor">
            <summary>
            Gets or sets the material specular color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.SpecularPower">
            <summary>
            Gets or sets the material specular power.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.Alpha">
            <summary>
            Gets or sets the material alpha.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.PreferPerPixelLighting">
            <summary>
            Gets or sets the per-pixel lighting prefer flag.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.AmbientLightColor">
            <summary>
            Gets or sets the ambient light color (range 0 to 1).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.DirectionalLight0">
            <summary>
            Gets the first directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.DirectionalLight1">
            <summary>
            Gets the second directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.DirectionalLight2">
            <summary>
            Gets the third directional light.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.FogEnabled">
            <summary>
            Gets or sets the fog enable flag.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.FogStart">
            <summary>
            Gets or sets the fog start distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.FogEnd">
            <summary>
            Gets or sets the fog end distance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.FogColor">
            <summary>
            Gets or sets the fog color.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.Texture">
            <summary>
            Gets or sets the current texture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.WeightsPerVertex">
            <summary>
            Gets or sets the number of skinning weights to evaluate for each vertex (1, 2, or 4).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SkinnedEffect.Microsoft#Xna#Framework#Graphics#IEffectLights#LightingEnabled">
            <summary>
            This effect requires lighting, so we explicitly implement
            IEffectLights.LightingEnabled, and do not allow turning it off.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.SpriteEffect">
            <summary>
            The default effect used by SpriteBatch.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteEffect.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Creates a new SpriteEffect.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteEffect.#ctor(Microsoft.Xna.Framework.Graphics.SpriteEffect)">
            <summary>
            Creates a new SpriteEffect by cloning parameter settings from an existing instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteEffect.Clone">
            <summary>
            Creates a clone of the current SpriteEffect instance.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteEffect.CacheEffectParameters">
            <summary>
            Looks up shortcut references to our effect parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteEffect.OnApply">
            <summary>
            Lazily computes derived parameter values immediately before applying the effect.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.IsWideScreen">
            <summary>
            Gets a <see cref="T:System.Boolean"/> indicating whether
            <see cref="P:Microsoft.Xna.Framework.Graphics.GraphicsAdapter.CurrentDisplayMode"/> has a
            Width:Height ratio corresponding to a widescreen <see cref="T:Microsoft.Xna.Framework.Graphics.DisplayMode"/>.
            Common widescreen modes include 16:9, 16:10 and 2:1.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.GraphicsCapabilities">
            <summary>
            Provides information about the capabilities of the
            current graphics device. A very useful thread for investigating GL extenion names
            http://stackoverflow.com/questions/3881197/opengl-es-2-0-extensions-on-android-devices
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.GraphicsCapabilities.SupportsNonPowerOfTwo">
            <summary>
            Whether the device fully supports non power-of-two textures, including
            mip maps and wrap modes other than CLAMP_TO_EDGE
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.GraphicsCapabilities.SupportsTextureFilterAnisotropic">
            <summary>
            Whether the device supports anisotropic texture filtering
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.GraphicsCapabilities.SupportsDxt1">
            <summary>
            Gets the support for DXT1
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.GraphicsCapabilities.SupportsS3tc">
            <summary>
            Gets the support for S3TC (DXT1, DXT3, DXT5)
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.GraphicsCapabilities.SupportsPvrtc">
            <summary>
            Gets the support for PVRTC
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.GraphicsCapabilities.SupportsEtc1">
            <summary>
            Gets the support for ETC1
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.GraphicsCapabilities.SupportsAtitc">
            <summary>
            Gets the support for ATITC
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.GraphicsDevice._vertexShader">
            <summary>
            The active vertex shader.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.GraphicsDevice._pixelShader">
            <summary>
            The active pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsDevice.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsAdapter,Microsoft.Xna.Framework.Graphics.GraphicsProfile,Microsoft.Xna.Framework.Graphics.PresentationParameters)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Xna.Framework.Graphics.GraphicsDevice"/> class.
            </summary>
            <param name="adapter">The graphics adapter.</param>
            <param name="graphicsProfile">The graphics profile.</param>
            <param name="presentationParameters">The presentation options.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="presentationParameters"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsDevice.OnDeviceResetting">
            <summary>
            Trigger the DeviceResetting event
            Currently internal to allow the various platforms to send the event at the appropriate time.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsDevice.OnDeviceReset">
            <summary>
            Trigger the DeviceReset event to allow games to be notified of a device reset.
            Currently internal to allow the various platforms to send the event at the appropriate time.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsDevice.DrawIndexedPrimitives(Microsoft.Xna.Framework.Graphics.PrimitiveType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw geometry by indexing into the vertex buffer.
            </summary>
            <param name="primitiveType">The type of primitives in the index buffer.</param>
            <param name="baseVertex">Used to offset the vertex range indexed from the vertex buffer.</param>
            <param name="minVertexIndex">A hint of the lowest vertex indexed relative to baseVertex.</param>
            <param name="numVertices">An hint of the maximum vertex indexed.</param>
            <param name="startIndex">The index within the index buffer to start drawing from.</param>
            <param name="primitiveCount">The number of primitives to render from the index buffer.</param>
            <remarks>Note that minVertexIndex and numVertices are unused in MonoGame and will be ignored.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsDevice.CreateDeviceIndependentResources">
            <summary>
            Creates resources not tied the active graphics device.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsDevice.CreateDeviceResources">
            <summary>
            Create graphics device specific resources.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.GraphicsDevice.Flush">
            <summary>
            Sends queued-up commands in the command buffer to the graphics processing unit (GPU).
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.GraphicsDevice.Handle">
            <summary>
            Returns a handle to internal device object. Valid only on DirectX platforms.
            For usage, convert this to SharpDX.Direct3D11.Device.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.IRenderTarget">
            <summary>
            Represents a render target.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.IRenderTarget.GetRenderTargetView(System.Int32)">
            <summary>
            Gets the <see cref="T:SharpDX.Direct3D11.RenderTargetView"/> for the specified array slice.
            </summary>
            <param name="arraySlice">The array slice.</param>
            <returns>The <see cref="T:SharpDX.Direct3D11.RenderTargetView"/>.</returns>
            <remarks>
            For texture cubes: The array slice is the index of the cube map face.
            </remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.IRenderTarget.GetDepthStencilView">
            <summary>
            Gets the <see cref="T:SharpDX.Direct3D11.DepthStencilView"/>.
            </summary>
            <returns>The <see cref="T:SharpDX.Direct3D11.DepthStencilView"/>. Can be <see langword="null"/>.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IRenderTarget.Width">
            <summary>
            Gets the width of the render target in pixels
            </summary>
            <value>The width of the render target in pixels.</value>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IRenderTarget.Height">
            <summary>
            Gets the height of the render target in pixels
            </summary>
            <value>The height of the render target in pixels.</value>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.IRenderTarget.RenderTargetUsage">
            <summary>
            Gets the usage mode of the render target.
            </summary>
            <value>The usage mode of the render target.</value>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.ModelBoneCollection">
            <summary>
            Represents a set of bones associated with a model.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.TryGetValue(System.String,Microsoft.Xna.Framework.Graphics.ModelBone@)">
            <summary>
            Finds a bone with a given name if it exists in the collection.
            </summary>
            <param name="boneName">The name of the bone to find.</param>
            <param name="value">The bone named boneName, if found.</param>
            <returns>true if the bone was found</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.GetEnumerator">
            <summary>
            Returns a ModelMeshCollection.Enumerator that can iterate through a ModelMeshCollection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Item(System.String)">
            <summary>
            Retrieves a ModelBone from the collection, given the name of the bone.
            </summary>
            <param name="boneName">The name of the bone to retrieve.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator">
            <summary>
            Provides the ability to iterate through the bones in an ModelMeshCollection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the ModelMeshCollection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Dispose">
            <summary>
            Immediately releases the unmanaged resources used by this object.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelBoneCollection.Enumerator.Current">
            <summary>
            Gets the current element in the ModelMeshCollection.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelBone.ModelTransform">
            <summary>
            Transform of this node from the root of the model not from the parent
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.ModelMeshCollection">
            <summary>
            Represents a collection of ModelMesh objects.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelMeshCollection.TryGetValue(System.String,Microsoft.Xna.Framework.Graphics.ModelMesh@)">
            <summary>
            Finds a mesh with a given name if it exists in the collection.
            </summary>
            <param name="meshName">The name of the mesh to find.</param>
            <param name="value">The mesh named meshName, if found.</param>
            <returns>true if a mesh was found</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelMeshCollection.GetEnumerator">
            <summary>
            Returns a ModelMeshCollection.Enumerator that can iterate through a ModelMeshCollection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMeshCollection.Item(System.String)">
            <summary>
            Retrieves a ModelMesh from the collection, given the name of the mesh.
            </summary>
            <param name="meshName">The name of the mesh to retrieve.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.ModelMeshCollection.Enumerator">
            <summary>
            Provides the ability to iterate through the bones in an ModelMeshCollection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelMeshCollection.Enumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the ModelMeshCollection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.ModelMeshCollection.Enumerator.Dispose">
            <summary>
            Immediately releases the unmanaged resources used by this object.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ModelMeshCollection.Enumerator.Current">
            <summary>
            Gets the current element in the ModelMeshCollection.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565">
            <summary>
            Packed vector type containing unsigned normalized values ranging from 0 to 1. The x and z components use 5 bits, and the y component uses 6 bits.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of Bgr565.
            </summary>
            <param name="x">The x component</param>
            <param name="y">The y component</param>
            <param name="z">The z component</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.#ctor(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Creates a new instance of Bgr565.
            </summary>
            <param name="vector">Vector containing the components for the packed vector.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.ToVector3">
            <summary>
            Gets the packed vector in Vector3 format.
            </summary>
            <returns>The packed vector in Vector3 format</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed vector from a Vector4.
            </summary>
            <param name="vector">Vector containing the components.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#ToVector4">
            <summary>
            Gets the packed vector in Vector4 format.
            </summary>
            <returns>The packed vector in Vector4 format</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.Equals(System.Object)">
            <summary>
            Compares an object with the packed vector.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>true if the object is equal to the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565)">
            <summary>
            Compares another Bgr565 packed vector with the packed vector.
            </summary>
            <param name="other">The Bgr565 packed vector to compare.</param>
            <returns>true if the packed vectors are equal.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
            <returns>A string representation of the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.GetHashCode">
            <summary>
            Gets a hash code of the packed vector.
            </summary>
            <returns>The hash code for the packed vector.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Bgr565.PackedValue">
            <summary>
            Gets and sets the packed value.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444">
            <summary>
            Packed vector type containing unsigned normalized values, ranging from 0 to 1, using 4 bits each for x, y, z, and w.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of Bgra4444.
            </summary>
            <param name="x">The x component</param>
            <param name="y">The y component</param>
            <param name="z">The z component</param>
            <param name="w">The w component</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Creates a new instance of Bgra4444.
            </summary>
            <param name="vector">Vector containing the components for the packed vector.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.ToVector4">
            <summary>
            Gets the packed vector in Vector4 format.
            </summary>
            <returns>The packed vector in Vector4 format</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed vector from a Vector4.
            </summary>
            <param name="vector">Vector containing the components.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.Equals(System.Object)">
            <summary>
            Compares an object with the packed vector.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>true if the object is equal to the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444)">
            <summary>
            Compares another Bgra4444 packed vector with the packed vector.
            </summary>
            <param name="other">The Bgra4444 packed vector to compare.</param>
            <returns>true if the packed vectors are equal.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.ToString">
            <summary>
            Gets a string representation of the packed vector.
            </summary>
            <returns>A string representation of the packed vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.GetHashCode">
            <summary>
            Gets a hash code of the packed vector.
            </summary>
            <returns>The hash code for the packed vector.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Bgra4444.PackedValue">
            <summary>
            Gets and sets the packed value.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4">
            <summary>
            Packed vector type containing four 8-bit unsigned integer values, ranging from 0 to 255.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Initializes a new instance of the Byte4 class.
            </summary>
            <param name="vector">A vector containing the initial values for the components of the Byte4 structure.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the Byte4 class.
            </summary>
            <param name="x">Initial value for the x component.</param>
            <param name="y">Initial value for the y component.</param>
            <param name="z">Initial value for the z component.</param>
            <param name="w">Initial value for the w component.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4,Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)">
            <summary>
            Compares the current instance of a class to another instance to determine whether they are different.
            </summary>
            <param name="a">The object to the left of the equality operator.</param>
            <param name="b">The object to the right of the equality operator.</param>
            <returns>true if the objects are different; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4,Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)">
            <summary>
            Compares the current instance of a class to another instance to determine whether they are the same.
            </summary>
            <param name="a">The object to the left of the equality operator.</param>
            <param name="b">The object to the right of the equality operator.</param>
            <returns>true if the objects are the same; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">The object with which to make the comparison.</param>
            <returns>true if the current instance is equal to the specified object; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Byte4)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="other">The object with which to make the comparison.</param>
            <returns>true if the current instance is equal to the specified object; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.GetHashCode">
            <summary>
            Gets the hash code for the current instance.
            </summary>
            <returns>Hash code for the instance.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToString">
            <summary>
            Returns a string representation of the current instance.
            </summary>
            <returns>String that represents the object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Pack(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Packs a vector into a uint.
            </summary>
            <param name="vector">The vector containing the values to pack.</param>
            <returns>The ulong containing the packed values.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
            <param name="vector">The vector to create the packed representation from.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
            <returns>The expanded vector.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Byte4.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the value.
            </summary>
            <value>The packed representation of the value.</value>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4">
            <summary>
            Packed vector type containing four 16-bit floating-point values.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the HalfVector4 structure.
            </summary>
            <param name="x">Initial value for the x component.</param>
            <param name="y">Initial value for the y component.</param>
            <param name="z">Initial value for the z component.</param>
            <param name="w">Initial value for the q component.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Initializes a new instance of the HalfVector4 structure.
            </summary>
            <param name="vector">A vector containing the initial values for the components of the HalfVector4 structure.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
            <param name="vector">The vector to create the packed representation from.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.PackHelper(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Packs a vector into a ulong.
            </summary>
            <param name="vector">The vector containing the values to pack.</param>
            <returns>The ulong containing the packed values.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
            <returns>The expanded vector.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.ToString">
            <summary>
            Returns a string representation of the current instance.
            </summary>
            <returns>String that represents the object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.GetHashCode">
            <summary>
            Gets the hash code for the current instance.
            </summary>
            <returns>Hash code for the instance.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">The object with which to make the comparison.</param>
            <returns>true if the current instance is equal to the specified object; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="other">The object with which to make the comparison.</param>
            <returns>true if the current instance is equal to the specified object; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4,Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4)">
            <summary>
            Compares the current instance of a class to another instance to determine whether they are the same.
            </summary>
            <param name="a">The object to the left of the equality operator.</param>
            <param name="b">The object to the right of the equality operator.</param>
            <returns>true if the objects are the same; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4,Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4)">
            <summary>
            Compares the current instance of a class to another instance to determine whether they are different.
            </summary>
            <param name="a">The object to the left of the equality operator.</param>
            <param name="b">The object to the right of the equality operator.</param>
            <returns>true if the objects are different; false otherwise.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.HalfVector4.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the value.
            </summary>
            <value>The packed representation of the value.</value>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PackedVector.Short4">
            <summary>
            Packed vector type containing four 16-bit signed integer values.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.#ctor(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Initializes a new instance of the Short4 class.
            </summary>
            <param name="vector">A vector containing the initial values for the components of the Short4 structure.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the Short4 class.
            </summary>
            <param name="x">Initial value for the x component.</param>
            <param name="y">Initial value for the y component.</param>
            <param name="z">Initial value for the z component.</param>
            <param name="w">Initial value for the w component.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.op_Inequality(Microsoft.Xna.Framework.Graphics.PackedVector.Short4,Microsoft.Xna.Framework.Graphics.PackedVector.Short4)">
            <summary>
            Compares the current instance of a class to another instance to determine whether they are different.
            </summary>
            <param name="a">The object to the left of the equality operator.</param>
            <param name="b">The object to the right of the equality operator.</param>
            <returns>true if the objects are different; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.op_Equality(Microsoft.Xna.Framework.Graphics.PackedVector.Short4,Microsoft.Xna.Framework.Graphics.PackedVector.Short4)">
            <summary>
            Compares the current instance of a class to another instance to determine whether they are the same.
            </summary>
            <param name="a">The object to the left of the equality operator.</param>
            <param name="b">The object to the right of the equality operator.</param>
            <returns>true if the objects are the same; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">The object with which to make the comparison.</param>
            <returns>true if the current instance is equal to the specified object; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.Equals(Microsoft.Xna.Framework.Graphics.PackedVector.Short4)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="other">The object with which to make the comparison.</param>
            <returns>true if the current instance is equal to the specified object; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.GetHashCode">
            <summary>
            Gets the hash code for the current instance.
            </summary>
            <returns>Hash code for the instance.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.ToString">
            <summary>
            Returns a string representation of the current instance.
            </summary>
            <returns>String that represents the object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.Pack(Microsoft.Xna.Framework.Vector4@)">
            <summary>
            Packs a vector into a ulong.
            </summary>
            <param name="vector">The vector containing the values to pack.</param>
            <returns>The ulong containing the packed values.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.Microsoft#Xna#Framework#Graphics#PackedVector#IPackedVector#PackFromVector4(Microsoft.Xna.Framework.Vector4)">
            <summary>
            Sets the packed representation from a Vector4.
            </summary>
            <param name="vector">The vector to create the packed representation from.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.ToVector4">
            <summary>
            Expands the packed representation into a Vector4.
            </summary>
            <returns>The expanded vector.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.PackedVector.Short4.PackedValue">
            <summary>
            Directly gets or sets the packed representation of the value.
            </summary>
            <value>The packed representation of the value.</value>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Texture.GetSharedHandle">
            <summary>
            Gets the handle to a shared resource.
            </summary>
            <returns>
            The handle of the shared resource, or <see cref="F:System.IntPtr.Zero"/> if the texture was not
            created as a shared resource.
            </returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.RenderTarget2D.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat,Microsoft.Xna.Framework.Graphics.DepthFormat,System.Int32,Microsoft.Xna.Framework.Graphics.RenderTargetUsage,Microsoft.Xna.Framework.Graphics.Texture2D.SurfaceType)">
            <summary>
            Allows child class to specify the surface type, eg: a swap chain.
            </summary>        
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Texture3D.GetData``1(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0[],System.Int32,System.Int32)">
            <summary>
            Gets a copy of 3D texture data, specifying a mipmap level, source box, start index, and number of elements.
            </summary>
            <typeparam name="T">The type of the elements in the array.</typeparam>
            <param name="level">Mipmap level.</param>
            <param name="left">Position of the left side of the box on the x-axis.</param>
            <param name="top">Position of the top of the box on the y-axis.</param>
            <param name="right">Position of the right side of the box on the x-axis.</param>
            <param name="bottom">Position of the bottom of the box on the y-axis.</param>
            <param name="front">Position of the front of the box on the z-axis.</param>
            <param name="back">Position of the back of the box on the z-axis.</param>
            <param name="data">Array of data.</param>
            <param name="startIndex">Index of the first element to get.</param>
            <param name="elementCount">Number of elements to get.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Texture3D.GetData``1(``0[],System.Int32,System.Int32)">
            <summary>
            Gets a copy of 3D texture data, specifying a start index and number of elements.
            </summary>
            <typeparam name="T">The type of the elements in the array.</typeparam>
            <param name="data">Array of data.</param>
            <param name="startIndex">Index of the first element to get.</param>
            <param name="elementCount">Number of elements to get.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.Texture3D.GetData``1(``0[])">
            <summary>
            Gets a copy of 3D texture data.
            </summary>
            <typeparam name="T">The type of the elements in the array.</typeparam>
            <param name="data">Array of data.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.RenderTargetCube">
            <summary>
            Represents a texture cube that can be used as a render target.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.TextureCube.GetData``1(Microsoft.Xna.Framework.Graphics.CubeMapFace,``0[])">
            <summary>
            Gets a copy of cube texture data specifying a cubemap face.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cubeMapFace">The cube map face.</param>
            <param name="data">The data.</param>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.TextureCube.Size">
            <summary>
            Gets the width and height of the cube map face in pixels.
            </summary>
            <value>The width and height of a cube map face in pixels.</value>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.RenderTargetCube.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat,Microsoft.Xna.Framework.Graphics.DepthFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Xna.Framework.Graphics.RenderTargetCube"/> class.
            </summary>
            <param name="graphicsDevice">The graphics device.</param>
            <param name="size">The width and height of a texture cube face in pixels.</param>
            <param name="mipMap"><see langword="true"/> to generate a full mipmap chain; otherwise <see langword="false"/>.</param>
            <param name="preferredFormat">The preferred format of the surface.</param>
            <param name="preferredDepthFormat">The preferred format of the depth-stencil buffer.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.RenderTargetCube.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Int32,System.Boolean,Microsoft.Xna.Framework.Graphics.SurfaceFormat,Microsoft.Xna.Framework.Graphics.DepthFormat,System.Int32,Microsoft.Xna.Framework.Graphics.RenderTargetUsage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Xna.Framework.Graphics.RenderTargetCube"/> class.
            </summary>
            <param name="graphicsDevice">The graphics device.</param>
            <param name="size">The width and height of a texture cube face in pixels.</param>
            <param name="mipMap"><see langword="true"/> to generate a full mipmap chain; otherwise <see langword="false"/>.</param>
            <param name="preferredFormat">The preferred format of the surface.</param>
            <param name="preferredDepthFormat">The preferred format of the depth-stencil buffer.</param>
            <param name="preferredMultiSampleCount">The preferred number of multisample locations.</param>
            <param name="usage">The usage mode of the render target.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.RenderTargetCube.GetRenderTargetView(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.RenderTargetCube.GetDepthStencilView">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.RenderTargetCube.DepthStencilFormat">
            <summary>
            Gets the depth-stencil buffer format of this render target.
            </summary>
            <value>The format of the depth-stencil buffer.</value>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.RenderTargetCube.MultiSampleCount">
            <summary>
            Gets the number of multisample locations.
            </summary>
            <value>The number of multisample locations.</value>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.RenderTargetCube.RenderTargetUsage">
            <summary>
            Gets the usage mode of this render target.
            </summary>
            <value>The usage mode of the render target.</value>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.RenderTargetCube.Microsoft#Xna#Framework#Graphics#IRenderTarget#Width">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.RenderTargetCube.Microsoft#Xna#Framework#Graphics#IRenderTarget#Height">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ResourceCreatedEventArgs.Resource">
            <summary>
            The newly created resource object.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ResourceDestroyedEventArgs.Name">
            <summary>
            The name of the destroyed resource.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.ResourceDestroyedEventArgs.Tag">
            <summary>
            The resource manager tag of the destroyed resource.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SamplerStateCollection.Dirty">
            <summary>
            Mark all the sampler slots as dirty.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.Shader.HashKey">
            <summary>
            A hash value which can be used to compare shaders.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteBatch.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{Microsoft.Xna.Framework.Rectangle},System.Nullable{Microsoft.Xna.Framework.Rectangle},System.Nullable{Microsoft.Xna.Framework.Vector2},System.Single,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{Microsoft.Xna.Framework.Color},Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            This is a MonoGame Extension method for calling Draw() using named parameters.  It is not available in the standard XNA Framework.
            </summary>
            <param name='texture'>
            The Texture2D to draw.  Required.
            </param>
            <param name='position'>
            The position to draw at.  If left empty, the method will draw at drawRectangle instead.
            </param>
            <param name='drawRectangle'>
            The rectangle to draw at.  If left empty, the method will draw at position instead.
            </param>
            <param name='sourceRectangle'>
            The source rectangle of the texture.  Default is null
            </param>
            <param name='origin'>
            Origin of the texture.  Default is Vector2.Zero
            </param>
            <param name='rotation'>
            Rotation of the texture.  Default is 0f
            </param>
            <param name='scale'>
            The scale of the texture as a Vector2.  Default is Vector2.One
            </param>
            <param name='color'>
            Color of the texture.  Default is Color.White
            </param>
            <param name='effect'>
            SpriteEffect to draw with.  Default is SpriteEffects.None
            </param>
            <param name='depth'>
            Draw depth.  Default is 0f.
            </param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.SpriteBatcher">
            <summary>
            This class handles the queueing of batch items into the GPU by creating the triangle tesselations
            that are used to draw the sprite textures. This class supports int.MaxValue number of sprites to be
            batched and will process them into short.MaxValue groups (strided by 6 for the number of vertices
            sent to the GPU). 
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteBatcher.InitialBatchSize">
            <summary>
            Initialization size for the batch item list and queue.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteBatcher.MaxBatchSize">
            <summary>
            The maximum number of batch items that can be processed per iteration
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteBatcher.InitialVertexArraySize">
            <summary>
            Initialization size for the vertex array, in batch units.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteBatcher._batchItemList">
            <summary>
            The list of batch items to process.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteBatcher._freeBatchItemQueue">
            <summary>
            The available SpriteBatchItem queue so that we reuse these objects when we can.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteBatcher._device">
            <summary>
            The target graphics device.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteBatcher._index">
            <summary>
            Vertex index array. The values in this array never change.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteBatcher.CreateBatchItem">
            <summary>
            Create an instance of SpriteBatchItem if there is none available in the free item queue. Otherwise,
            a previously allocated SpriteBatchItem is reused.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteBatcher.EnsureArrayCapacity(System.Int32)">
            <summary>
            Resize and recreate the missing indices for the index and vertex position color buffers.
            </summary>
            <param name="numBatchItems"></param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteBatcher.CompareTexture(Microsoft.Xna.Framework.Graphics.SpriteBatchItem,Microsoft.Xna.Framework.Graphics.SpriteBatchItem)">
            <summary>
            Reference comparison of the underlying Texture objects for each given SpriteBatchitem.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns>0 if they are not reference equal, and 1 if so.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteBatcher.CompareDepth(Microsoft.Xna.Framework.Graphics.SpriteBatchItem,Microsoft.Xna.Framework.Graphics.SpriteBatchItem)">
            <summary>
            Compares the Depth of a against b returning -1 if a is less than b, 
            0 if equal, and 1 if a is greater than b. The test uses float.CompareTo(float)
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns>-1 if a is less than b, 0 if equal, and 1 if a is greater than b</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteBatcher.CompareReverseDepth(Microsoft.Xna.Framework.Graphics.SpriteBatchItem,Microsoft.Xna.Framework.Graphics.SpriteBatchItem)">
            <summary>
            Implements the opposite of CompareDepth, where b is compared against a.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns>-1 if b is less than a, 0 if equal, and 1 if b is greater than a</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteBatcher.DrawBatch(Microsoft.Xna.Framework.Graphics.SpriteSortMode)">
            <summary>
            Sorts the batch items and then groups batch drawing into maximal allowed batch sets that do not
            overflow the 16 bit array indices for vertices.
            </summary>
            <param name="sortMode">The type of depth sorting desired for the rendering.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteBatcher.FlushVertexArray(System.Int32,System.Int32)">
            <summary>
            Sends the triangle list to the graphics device. Here is where the actual drawing starts.
            </summary>
            <param name="start">Start index of vertices to draw. Not used except to compute the count of vertices to draw.</param>
            <param name="end">End index of vertices to draw. Not used except to compute the count of vertices to draw.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteFont.GetGlyphs">
            <summary>
            Returns a copy of the dictionary containing the glyphs in this SpriteFont.
            </summary>
            <returns>A new Dictionary containing all of the glyphs inthis SpriteFont</returns>
            <remarks>Can be used to calculate character bounds when implementing custom SpriteFont rendering.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteFont.MeasureString(System.String)">
            <summary>
            Returns the size of a string when rendered in this font.
            </summary>
            <param name="text">The text to measure.</param>
            <returns>The size, in pixels, of 'text' when rendered in
            this font.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.SpriteFont.MeasureString(System.Text.StringBuilder)">
            <summary>
            Returns the size of the contents of a StringBuilder when
            rendered in this font.
            </summary>
            <param name="text">The text to measure.</param>
            <returns>The size, in pixels, of 'text' when rendered in
            this font.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SpriteFont.Texture">
            <summary>
            Gets the texture that this SpriteFont draws from.
            </summary>
            <remarks>Can be used to implement custom rendering of a SpriteFont</remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SpriteFont.Characters">
            <summary>
            Gets a collection of the characters in the font.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SpriteFont.DefaultCharacter">
            <summary>
            Gets or sets the character that will be substituted when a
            given character is not included in the font.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SpriteFont.LineSpacing">
            <summary>
            Gets or sets the line spacing (the distance from baseline
            to baseline) of the font.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.SpriteFont.Spacing">
            <summary>
            Gets or sets the spacing (tracking) between characters in
            the font.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.SpriteFont.Glyph">
            <summary>
            Struct that defines the spacing, Kerning, and bounds of a character.
            </summary>
            <remarks>Provides the data necessary to implement custom SpriteFont rendering.</remarks>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteFont.Glyph.Character">
            <summary>
            The char associated with this glyph.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteFont.Glyph.BoundsInTexture">
            <summary>
            Rectangle in the font texture where this letter exists.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteFont.Glyph.Cropping">
            <summary>
            Cropping applied to the BoundsInTexture to calculate the bounds of the actual character.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteFont.Glyph.LeftSideBearing">
            <summary>
            The amount of space between the left side ofthe character and its first pixel in the X dimention.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteFont.Glyph.RightSideBearing">
            <summary>
            The amount of space between the right side of the character and its last pixel in the X dimention.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteFont.Glyph.Width">
            <summary>
            Width of the character before kerning is applied. 
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.SpriteFont.Glyph.WidthIncludingBearings">
            <summary>
            Width of the character before kerning is applied. 
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BlendState.Item(System.Int32)">
            <summary>
            Returns the target specific blend state.
            </summary>
            <param name="index">The 0 to 3 target blend state index.</param>
            <returns>A target blend state.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.BlendState.IndependentBlendEnable">
            <summary>
            Enables use of the per-target blend states.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.TextureCollection.Dirty">
            <summary>
            Marks all texture slots as dirty.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.IndexBuffer.SizeForType(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Type)">
            <summary>
            Gets the relevant IndexElementSize enum value for the given type.
            </summary>
            <param name="graphicsDevice">The graphics device.</param>
            <param name="type">The type to use for the index buffer</param>
            <returns>The IndexElementSize enum value that matches the type</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.IndexBuffer.GraphicsDeviceResetting">
            <summary>
            The GraphicsDevice is resetting, so GPU resources must be recreated.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.DynamicIndexBuffer.UserOffset">
            <summary>
            Special offset used internally by GraphicsDevice.DrawUserXXX() methods.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.VertexBuffer.GraphicsDeviceResetting">
            <summary>
            The GraphicsDevice is resetting, so GPU resources must be recreated.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.DynamicVertexBuffer.UserOffset">
            <summary>
            Special offset used internally by GraphicsDevice.DrawUserXXX() methods.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.PrimitiveType">
            <summary>
            Defines how vertex data is ordered.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.PrimitiveType.TriangleList">
            <summary>
            Renders the specified vertices as a sequence of isolated triangles. Each group of three vertices defines a separate triangle. Back-face culling is affected by the current winding-order render state.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.PrimitiveType.TriangleStrip">
            <summary>
            Renders the vertices as a triangle strip. The back-face culling flag is flipped automatically on even-numbered triangles.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.PrimitiveType.LineList">
            <summary>
            Renders the vertices as a list of isolated straight line segments; the count may be any positive integer.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.PrimitiveType.LineStrip">
            <summary>
            Renders the vertices as a single polyline; the count may be any positive integer.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.VertexDeclarationCache`1">
            <summary>
            Helper class which ensures we only lookup a vertex 
            declaration for a particular type once.
            </summary>
            <typeparam name="T">A vertex structure which implements IVertexType.</typeparam>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.VertexDeclaration.FromType(System.Type)">
            <summary>
            Returns the VertexDeclaration for Type.
            </summary>
            <param name="vertexType">A value type which implements the IVertexType interface.</param>
            <returns>The VertexDeclaration.</returns>
            <remarks>
            Prefer to use VertexDeclarationCache when the declaration lookup
            can be performed with a templated type.
            </remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Graphics.VertexDeclaration.HashKey">
            <summary>
            A hash value which can be used to compare declarations.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.Viewport.x">
            <summary>
            Attributes 
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.GamePad">
            <summary> 
            Supports querying the game controllers and setting the vibration motors.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePad.GetCapabilities(Microsoft.Xna.Framework.PlayerIndex)">
            <summary>
            Returns the capabilites of the connected controller.
            </summary>
            <param name="playerIndex">Player index for the controller you want to query.</param>
            <returns>The capabilites of the controller.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePad.GetState(Microsoft.Xna.Framework.PlayerIndex)">
            <summary>
            Gets the current state of a game pad controller with an independent axes dead zone.
            </summary>
            <param name="playerIndex">Player index for the controller you want to query.</param>
            <returns>The state of the controller.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePad.GetState(Microsoft.Xna.Framework.PlayerIndex,Microsoft.Xna.Framework.Input.GamePadDeadZone)">
            <summary>
            Gets the current state of a game pad controller, using a specified dead zone
            on analog stick positions.
            </summary>
            <param name="playerIndex">Player index for the controller you want to query.</param>
            <param name="deadZoneMode">Enumerated value that specifies what dead zone type to use.</param>
            <returns>The state of the controller.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePad.SetVibration(Microsoft.Xna.Framework.PlayerIndex,System.Single,System.Single)">
            <summary>
            Sets the vibration motor speeds on the controller device if supported.
            </summary>
            <param name="playerIndex">Player index that identifies the controller to set.</param>
            <param name="leftMotor">The speed of the left motor, between 0.0 and 1.0. This motor is a low-frequency motor.</param>
            <param name="rightMotor">The speed of the right motor, between 0.0 and 1.0. This motor is a high-frequency motor.</param>
            <returns>Returns true if the vibration motors were set.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadButtons.op_Equality(Microsoft.Xna.Framework.Input.GamePadButtons,Microsoft.Xna.Framework.Input.GamePadButtons)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadButtons"/> are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>true if <paramref name="left"/> and <paramref name="right"/> are equal; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadButtons.op_Inequality(Microsoft.Xna.Framework.Input.GamePadButtons,Microsoft.Xna.Framework.Input.GamePadButtons)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadButtons"/> are not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>true if <paramref name="left"/> and <paramref name="right"/> are not equal; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadButtons.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns>true if <paramref name="obj"/> is a <see cref="T:Microsoft.Xna.Framework.Input.GamePadButtons"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDPad.op_Equality(Microsoft.Xna.Framework.Input.GamePadDPad,Microsoft.Xna.Framework.Input.GamePadDPad)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadDPad"/> are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>true if <paramref name="left"/> and <paramref name="right"/> are equal; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDPad.op_Inequality(Microsoft.Xna.Framework.Input.GamePadDPad,Microsoft.Xna.Framework.Input.GamePadDPad)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadDPad"/> are not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>true if <paramref name="left"/> and <paramref name="right"/> are not equal; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadDPad.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns>true if <paramref name="obj"/> is a <see cref="T:Microsoft.Xna.Framework.Input.GamePadDPad"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.GamePadState.Default">
            <summary>
            The default initialized gamepad state.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadState.GetVirtualButtons">
            <summary>
            Gets the button mask along with 'virtual buttons' like LeftThumbstickLeft.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadThumbSticks.op_Equality(Microsoft.Xna.Framework.Input.GamePadThumbSticks,Microsoft.Xna.Framework.Input.GamePadThumbSticks)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadThumbSticks"/> are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>true if <paramref name="left"/> and <paramref name="right"/> are equal; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadThumbSticks.op_Inequality(Microsoft.Xna.Framework.Input.GamePadThumbSticks,Microsoft.Xna.Framework.Input.GamePadThumbSticks)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadThumbSticks"/> are not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>true if <paramref name="left"/> and <paramref name="right"/> are not equal; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadThumbSticks.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns>true if <paramref name="obj"/> is a <see cref="T:Microsoft.Xna.Framework.Input.GamePadThumbSticks"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadTriggers.op_Equality(Microsoft.Xna.Framework.Input.GamePadTriggers,Microsoft.Xna.Framework.Input.GamePadTriggers)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadTriggers"/> are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>true if <paramref name="left"/> and <paramref name="right"/> are equal; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadTriggers.op_Inequality(Microsoft.Xna.Framework.Input.GamePadTriggers,Microsoft.Xna.Framework.Input.GamePadTriggers)">
            <summary>
            Determines whether two specified instances of <see cref="T:Microsoft.Xna.Framework.Input.GamePadTriggers"/> are not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>true if <paramref name="left"/> and <paramref name="right"/> are not equal; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.GamePadTriggers.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">An object to compare to this instance.</param>
            <returns>true if <paramref name="obj"/> is a <see cref="T:Microsoft.Xna.Framework.Input.GamePadTriggers"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Keyboard">
            <summary>
            Allows getting keystrokes from keyboard.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Keyboard.GetState">
            <summary>
            Returns the current keyboard state.
            </summary>
            <returns>Current keyboard state.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Keyboard.GetState(Microsoft.Xna.Framework.PlayerIndex)">
            <summary>
            Returns the current keyboard state for a given player.
            </summary>
            <param name="playerIndex">Player index of the keyboard.</param>
            <returns>Current keyboard state.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.KeyboardState">
            <summary>
            Holds the state of keystrokes by a keyboard.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.#ctor(System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> class.
            </summary>
            <param name="keys">List of keys to be flagged as pressed on initialization.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.#ctor(Microsoft.Xna.Framework.Input.Keys[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> class.
            </summary>
            <param name="keys">List of keys to be flagged as pressed on initialization.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.IsKeyDown(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Gets whether given key is currently being pressed.
            </summary>
            <param name="key">The key to query.</param>
            <returns>true if the key is pressed; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.IsKeyUp(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Gets whether given key is currently being not pressed.
            </summary>
            <param name="key">The key to query.</param>
            <returns>true if the key is not pressed; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.GetPressedKeys">
            <summary>
            Returns an array of values holding keys that are currently being pressed.
            </summary>
            <returns>The keys that are currently being pressed.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.GetHashCode">
            <summary>
            Gets the hash code for <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instance.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.op_Equality(Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instance to the left of the equality operator.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instance to the right of the equality operator.</param>
            <returns>true if the instances are equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.op_Inequality(Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Compares whether two <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instance to the left of the inequality operator.</param>
            <param name="b"><see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instance to the right of the inequality operator.</param>
            <returns>true if the instances are different; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.KeyboardState.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified object.
            </summary>
            <param name="obj">The <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> to compare.</param>
            <returns>true if the provided <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/> instance is same with current; false otherwise.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.KeyboardState.Item(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Returns the state of a specified key.
            </summary>
            <param name="key">The key to query.</param>
            <returns>The state of the key.</returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Keys">
            <summary>
            Identifies keys on a keyboard.
            </summary>	
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.None">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Back">
            <summary>
            BACKSPACE key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Tab">
            <summary>
            TAB key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Enter">
            <summary>
            ENTER key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.CapsLock">
            <summary>
            CAPS LOCK key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Escape">
            <summary>
            ESC key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Space">
            <summary>
            SPACEBAR
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.PageUp">
            <summary>
            PAGE UP key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.PageDown">
            <summary>
            PAGE DOWN key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.End">
            <summary>
            END key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Home">
            <summary>
            HOME key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Left">
            <summary>
            LEFT ARROW key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Up">
            <summary>
            UP ARROW key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Right">
            <summary>
            RIGHT ARROW key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Down">
            <summary>
            DOWN ARROW key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Select">
            <summary>
            SELECT key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Print">
            <summary>
            PRINT key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Execute">
            <summary>
            EXECUTE key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.PrintScreen">
            <summary>
            PRINT SCREEN key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Insert">
            <summary>
            INS key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Delete">
            <summary>
            DEL key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Help">
            <summary>
            HELP key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D0">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D1">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D2">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D3">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D4">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D5">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D6">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D7">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D8">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D9">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.A">
            <summary>
            A key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.B">
            <summary>
            B key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.C">
            <summary>
            C key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.D">
            <summary>
            D key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.E">
            <summary>
            E key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F">
            <summary>
            F key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.G">
            <summary>
            G key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.H">
            <summary>
            H key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.I">
            <summary>
            I key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.J">
            <summary>
            J key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.K">
            <summary>
            K key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.L">
            <summary>
            L key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.M">
            <summary>
            M key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.N">
            <summary>
            N key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.O">
            <summary>
            O key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.P">
            <summary>
            P key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Q">
            <summary>
            Q key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.R">
            <summary>
            R key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.S">
            <summary>
            S key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.T">
            <summary>
            T key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.U">
            <summary>
            U key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.V">
            <summary>
            V key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.W">
            <summary>
            W key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.X">
            <summary>
            X key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Y">
            <summary>
            Y key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Z">
            <summary>
            Z key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.LeftWindows">
            <summary>
            Left Windows key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.RightWindows">
            <summary>
            Right Windows key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Apps">
            <summary>
            Applications key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Sleep">
            <summary>
            Computer Sleep key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad0">
            <summary>
            Numeric keypad 0 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad1">
            <summary>
            Numeric keypad 1 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad2">
            <summary>
            Numeric keypad 2 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad3">
            <summary>
            Numeric keypad 3 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad4">
            <summary>
            Numeric keypad 4 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad5">
            <summary>
            Numeric keypad 5 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad6">
            <summary>
            Numeric keypad 6 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad7">
            <summary>
            Numeric keypad 7 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad8">
            <summary>
            Numeric keypad 8 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumPad9">
            <summary>
            Numeric keypad 9 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Multiply">
            <summary>
            Multiply key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Add">
            <summary>
            Add key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Separator">
            <summary>
            Separator key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Subtract">
            <summary>
            Subtract key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Decimal">
            <summary>
            Decimal key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Divide">
            <summary>
            Divide key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F1">
            <summary>
            F1 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F2">
            <summary>
            F2 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F3">
            <summary>
            F3 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F4">
            <summary>
            F4 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F5">
            <summary>
            F5 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F6">
            <summary>
            F6 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F7">
            <summary>
            F7 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F8">
            <summary>
            F8 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F9">
            <summary>
            F9 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F10">
            <summary>
            F10 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F11">
            <summary>
            F11 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F12">
            <summary>
            F12 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F13">
            <summary>
            F13 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F14">
            <summary>
            F14 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F15">
            <summary>
            F15 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F16">
            <summary>
            F16 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F17">
            <summary>
            F17 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F18">
            <summary>
            F18 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F19">
            <summary>
            F19 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F20">
            <summary>
            F20 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F21">
            <summary>
            F21 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F22">
            <summary>
            F22 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F23">
            <summary>
            F23 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.F24">
            <summary>
            F24 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.NumLock">
            <summary>
            NUM LOCK key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Scroll">
            <summary>
            SCROLL LOCK key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.LeftShift">
            <summary>
            Left SHIFT key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.RightShift">
            <summary>
            Right SHIFT key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.LeftControl">
            <summary>
            Left CONTROL key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.RightControl">
            <summary>
            Right CONTROL key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.LeftAlt">
            <summary>
            Left ALT key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.RightAlt">
            <summary>
            Right ALT key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.BrowserBack">
            <summary>
            Browser Back key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.BrowserForward">
            <summary>
            Browser Forward key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.BrowserRefresh">
            <summary>
            Browser Refresh key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.BrowserStop">
            <summary>
            Browser Stop key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.BrowserSearch">
            <summary>
            Browser Search key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.BrowserFavorites">
            <summary>
            Browser Favorites key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.BrowserHome">
            <summary>
            Browser Start and Home key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.VolumeMute">
            <summary>
            Volume Mute key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.VolumeDown">
            <summary>
            Volume Down key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.VolumeUp">
            <summary>
            Volume Up key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.MediaNextTrack">
            <summary>
            Next Track key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.MediaPreviousTrack">
            <summary>
            Previous Track key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.MediaStop">
            <summary>
            Stop Media key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.MediaPlayPause">
            <summary>
            Play/Pause Media key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.LaunchMail">
            <summary>
            Start Mail key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.SelectMedia">
            <summary>
            Select Media key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.LaunchApplication1">
            <summary>
            Start Application 1 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.LaunchApplication2">
            <summary>
            Start Application 2 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemSemicolon">
            <summary>
            The OEM Semicolon key on a US standard keyboard
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemPlus">
            <summary>
            For any country/region, the '+' key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemComma">
            <summary>
            For any country/region, the ',' key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemMinus">
            <summary>
            For any country/region, the '-' key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemPeriod">
            <summary>
            For any country/region, the '.' key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemQuestion">
            <summary>
            The OEM question mark key on a US standard keyboard
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemTilde">
            <summary>
            The OEM tilde key on a US standard keyboard
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemOpenBrackets">
            <summary>
            The OEM open bracket key on a US standard keyboard
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemPipe">
            <summary>
            The OEM pipe key on a US standard keyboard
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemCloseBrackets">
            <summary>
            The OEM close bracket key on a US standard keyboard
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemQuotes">
            <summary>
            The OEM singled/double quote key on a US standard keyboard
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Oem8">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemBackslash">
            <summary>
            The OEM angle bracket or backslash key on the RT 102 key keyboard
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.ProcessKey">
            <summary>
            IME PROCESS key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Attn">
            <summary>
            Attn key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Crsel">
            <summary>
            CrSel key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Exsel">
            <summary>
            ExSel key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.EraseEof">
            <summary>
            Erase EOF key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Play">
            <summary>
            Play key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Zoom">
            <summary>
            Zoom key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Pa1">
            <summary>
            PA1 key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemClear">
            <summary>
            CLEAR key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.ChatPadGreen">
            <summary>
            Green ChatPad key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.ChatPadOrange">
            <summary>
            Orange ChatPad key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Pause">
            <summary>
            PAUSE key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.ImeConvert">
            <summary>
            IME Convert key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.ImeNoConvert">
            <summary>
            IME NoConvert key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Kana">
            <summary>
            Kana key on Japanese keyboards
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.Kanji">
            <summary>
            Kanji key on Japanese keyboards
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemAuto">
            <summary>
            OEM Auto key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemCopy">
            <summary>
            OEM Copy key
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Keys.OemEnlW">
            <summary>
            OEM Enlarge Window key
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.KeyState">
            <summary>
            Identifies the state of a keyboard key.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.KeyState.Up">
            <summary>
            Key is released.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.KeyState.Down">
            <summary>
            Key is pressed.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Mouse">
            <summary>
            Allows reading position and button click information from mouse.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Mouse.GetState(Microsoft.Xna.Framework.GameWindow)">
            <summary>
            This API is an extension to XNA.
            Gets mouse state information that includes position and button
            presses for the provided window
            </summary>
            <returns>Current state of the mouse.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Mouse.GetState">
            <summary>
            Gets mouse state information that includes position and button presses
            for the primary window
            </summary>
            <returns>Current state of the mouse.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Mouse.SetPosition(System.Int32,System.Int32)">
            <summary>
            Sets mouse cursor's relative position to game-window.
            </summary>
            <param name="x">Relative horizontal position of the cursor.</param>
            <param name="y">Relative vertical position of the cursor.</param>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Mouse.WindowHandle">
            <summary>
            Gets or sets the window handle for current mouse processing.
            </summary> 
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.MouseState">
            <summary>
            Represents a mouse state with cursor position and button press information.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.#ctor(System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Input.ButtonState,Microsoft.Xna.Framework.Input.ButtonState,Microsoft.Xna.Framework.Input.ButtonState,Microsoft.Xna.Framework.Input.ButtonState,Microsoft.Xna.Framework.Input.ButtonState)">
            <summary>
            Initializes a new instance of the MouseState.
            </summary>
            <param name="x">Horizontal position of the mouse.</param>
            <param name="y">Vertical position of the mouse.</param>
            <param name="scrollWheel">Mouse scroll wheel's value.</param>
            <param name="leftButton">Left mouse button's state.</param>
            <param name="middleButton">Middle mouse button's state.</param>
            <param name="rightButton">Right mouse button's state.</param>
            <param name="xButton1">XBUTTON1's state.</param>
            <param name="xButton2">XBUTTON2's state.</param>
            <remarks>Normally <see cref="M:Microsoft.Xna.Framework.Input.Mouse.GetState"/> should be used to get mouse current state. The constructor is provided for simulating mouse input.</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.op_Equality(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.Input.MouseState)">
            <summary>
            Compares whether two MouseState instances are equal.
            </summary>
            <param name="left">MouseState instance on the left of the equal sign.</param>
            <param name="right">MouseState instance  on the right of the equal sign.</param>
            <returns>true if the instances are equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.op_Inequality(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.Input.MouseState)">
            <summary>
            Compares whether two MouseState instances are not equal.
            </summary>
            <param name="left">MouseState instance on the left of the equal sign.</param>
            <param name="right">MouseState instance  on the right of the equal sign.</param>
            <returns>true if the objects are not equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified object.
            </summary>
            <param name="obj">The MouseState to compare.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.MouseState.GetHashCode">
            <summary>
            Gets the hash code for MouseState instance.
            </summary>
            <returns>Hash code of the object.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.X">
            <summary>
            Gets horizontal position of the cursor.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.Y">
            <summary>
            Gets vertical position of the cursor.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.Position">
            <summary>
            Gets cursor position.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.LeftButton">
            <summary>
            Gets state of the left mouse button.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.MiddleButton">
            <summary>
            Gets state of the middle mouse button.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.RightButton">
            <summary>
            Gets state of the right mouse button.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.ScrollWheelValue">
            <summary>
            Returns cumulative scroll wheel value since the game start.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.XButton1">
            <summary>
            Gets state of the XButton1.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.MouseState.XButton2">
            <summary>
            Gets state of the XButton2.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Touch.GestureSample">
            <summary>
            Represents data from a multi-touch gesture over a span of time.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.GestureSample.#ctor(Microsoft.Xna.Framework.Input.Touch.GestureType,System.TimeSpan,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Initializes a new <see cref="T:Microsoft.Xna.Framework.Input.Touch.GestureSample"/>.
            </summary>
            <param name="gestureType"><see cref="P:Microsoft.Xna.Framework.Input.Touch.GestureSample.GestureType"/></param>
            <param name="timestamp"></param>
            <param name="position"></param>
            <param name="position2"></param>
            <param name="delta"></param>
            <param name="delta2"></param>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.GestureSample.GestureType">
            <summary>
            Gets the type of the gesture.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.GestureSample.Timestamp">
            <summary>
            Gets the starting time for this multi-touch gesture sample.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.GestureSample.Position">
            <summary>
            Gets the position of the first touch-point in the gesture sample.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.GestureSample.Position2">
            <summary>
            Gets the position of the second touch-point in the gesture sample.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta">
            <summary>
            Gets the delta information for the first touch-point in the gesture sample.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta2">
            <summary>
            Gets the delta information for the second touch-point in the gesture sample.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Touch.GestureType">
            <summary>
            Enumuration of values that represent different gestures that can be processed by <see cref="M:Microsoft.Xna.Framework.Input.Touch.TouchPanel.ReadGesture"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.GestureType.None">
            <summary>
            No gestures.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.GestureType.Tap">
            <summary>
            The user touched a single point.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.GestureType.DragComplete">
            <summary>
            States completion of a drag gesture(VerticalDrag, HorizontalDrag, or FreeDrag).
            </summary>
            <remarks>No position or delta information is available for this sample.</remarks>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.GestureType.Flick">
            <summary>
            States that a touch was combined with a quick swipe.
            </summary>    
            <remarks>Flicks does not contain position information. The velocity of it can be read from <see cref="P:Microsoft.Xna.Framework.Input.Touch.GestureSample.Delta"/></remarks>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.GestureType.FreeDrag">
            <summary>
            The use touched a point and then performed a free-form drag.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.GestureType.Hold">
            <summary>        
            The use touched a single point for approximately one second.
            </summary>
            <remarks>As this is a single event, it will not be contionusly fired while the user is holding the touch-point.</remarks>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.GestureType.HorizontalDrag">
            <summary>
            The user touched the screen and performed either left to right or right to left drag gesture.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.GestureType.Pinch">
            <summary>
            The user either converged or diverged two touch-points on the screen which is like a two-finger drag.
            </summary>
            <remarks>When this gesture-type is enabled and two fingers are down, it takes precedence over drag gestures.</remarks>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.GestureType.PinchComplete">
            <summary>
            An in-progress pinch operation was completed.
            </summary>
            <remarks>No position or delta information is available for this sample.</remarks>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.GestureType.DoubleTap">
            <summary>
            The user tapped the device twice which is always preceded by a Tap gesture.
            </summary>
            <remarks>If the time between two touchs are long enough, insted two seperate single Tap gestures will be generated.</remarks>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.GestureType.VerticalDrag">
            <summary>
            The user touched the screen and performed either top to bottom or bottom to top drag gesture.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Touch.TouchCollection">
            <summary>
            Provides state information for a touch screen enabled device.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchCollection.#ctor(Microsoft.Xna.Framework.Input.Touch.TouchLocation[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchCollection"/> with a pre-determined set of touch locations.
            </summary>
            <param name="touches">Array of <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> items to initialize with.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchCollection.FindById(System.Int32,Microsoft.Xna.Framework.Input.Touch.TouchLocation@)">
            <summary>
            Returns <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> specified by ID.
            </summary>
            <param name="id"></param>
            <param name="touchLocation"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchCollection.IndexOf(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Returns the index of the first occurrence of specified <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> item in the collection.
            </summary>
            <param name="item"><see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> to query.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchCollection.Insert(System.Int32,Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Inserts a <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> item into the indicated position.
            </summary>
            <param name="index">The position to insert into.</param>
            <param name="item">The <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> item to insert.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> item at specified index.
            </summary>
            <param name="index">Index of the item that will be removed from collection.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchCollection.Add(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Adds a <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> item to be added. </param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchCollection.Clear">
            <summary>
            Clears all the items in collection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchCollection.Contains(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Returns true if specified <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> item exists in the collection, false otherwise./&gt;
            </summary>
            <param name="item">The <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> item to query for.</param>
            <returns>Returns true if queried item is found, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchCollection.CopyTo(Microsoft.Xna.Framework.Input.Touch.TouchLocation[],System.Int32)">
            <summary>
            Copies the <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/>collection to specified array starting from the given index.
            </summary>
            <param name="array">The array to copy <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> items.</param>
            <param name="arrayIndex">The starting index of the copy operation.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchCollection.Remove(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Removes the specified <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> item from the collection.
            </summary>
            <param name="item">The <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> item to remove.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchCollection"/>.
            </summary>
            <returns>Enumerable list of <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> objects.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchCollection.System#Collections#Generic#IEnumerable{Microsoft#Xna#Framework#Input#Touch#TouchLocation}#GetEnumerator">
            <summary>
            Returns an enumerator for the <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchCollection"/>.
            </summary>
            <returns>Enumerable list of <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> objects.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator for the <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchCollection"/>.
            </summary>
            <returns>Enumerable list of objects.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchCollection.IsConnected">
            <summary>
            States if a touch screen is available.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchCollection.IsReadOnly">
            <summary>
            States if touch collection is read only.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchCollection.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index of the collection.
            </summary>
            <param name="index">Position of the item.</param>
            <returns><see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/></returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchCollection.Count">
            <summary>
            Returns the number of <see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchLocation"/> items that exist in the collection.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Touch.TouchCollection.Enumerator">
            <summary>
            Provides the ability to iterate through the TouchLocations in an TouchCollection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchCollection.Enumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the TouchCollection.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchCollection.Enumerator.Dispose">
            <summary>
            Immediately releases the unmanaged resources used by this object.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchCollection.Enumerator.Current">
            <summary>
            Gets the current element in the TouchCollection.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchLocation._id">
             <summary>
            Attributes 
             </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchLocation.Invalid">
            <summary>
            Helper for assigning an invalid touch location.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchLocation.AsMovedState">
            <summary>
            Returns a copy of the touch with the state changed to moved.
            </summary>
            <returns>The new touch location.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchLocation.UpdateState(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Updates the touch location using the new event.
            </summary>
            <param name="touchEvent">The next event for this touch location.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Touch.TouchLocationState">
            <summary>
            Holds the possible state information for a touch location..
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchLocationState.Invalid">
            <summary>
            This touch location position is invalid.
            </summary>
            <remarks>Typically, you will encounter this state when a new touch location attempts to get the previous state of itself.</remarks>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchLocationState.Moved">
            <summary>
            This touch location position was updated or pressed at the same position.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchLocationState.Pressed">
            <summary>
            This touch location position is new. 
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchLocationState.Released">
            <summary>
            This touch location position was released. 
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Touch.TouchPanel">
            <summary>
            Allows retrieval of information from Touch Panel device.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchPanel.GetState">
            <summary>
            Gets the current state of the touch panel.
            </summary>
            <returns><see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchCollection"/></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchPanel.ReadGesture">
            <summary>
            Returns the next available gesture on touch panel device.
            </summary>
            <returns><see cref="T:Microsoft.Xna.Framework.Input.Touch.GestureSample"/></returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchPanel.WindowHandle">
            <summary>
            The window handle of the touch panel. Purely for Xna compatibility.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchPanel.DisplayHeight">
            <summary>
            Gets or sets the display height of the touch panel.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchPanel.DisplayOrientation">
            <summary>
            Gets or sets the display orientation of the touch panel.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchPanel.DisplayWidth">
            <summary>
            Gets or sets the display width of the touch panel.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchPanel.EnabledGestures">
            <summary>
            Gets or sets enabled gestures.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchPanel.IsGestureAvailable">
            <summary>
            Returns true if a touch gesture is available.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Input.Touch.TouchPanelCapabilities">
            <summary>
            Allows retrieval of capabilities information from touch panel device.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchPanelCapabilities.IsConnected">
            <summary>
            Returns true if a device is available for use.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchPanelCapabilities.MaximumTouchCount">
            <summary>
            Returns the maximum number of touch locations tracked by the touch panel device.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.MouseTouchId">
            <summary>
            The reserved touchId for all mouse touch points.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.TapJitterTolerance">
            <summary>
            Maximum distance a touch location can wiggle and 
            not be considered to have moved.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchPanelState._touchState">
            <summary>
            The current touch state.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchPanelState._gestureState">
            <summary>
            The current gesture state.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchPanelState._touchScale">
            <summary>
            The positional scale to apply to touch input.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchPanelState._displaySize">
            <summary>
            The current size of the display.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchPanelState._nextTouchId">
            <summary>
            The next touch location identifier.
            The value 1 is reserved for the mouse touch point.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchPanelState._currentTimestamp">
            <summary>
            The current timestamp that we use for setting the timestamp of new TouchLocations
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchPanelState._touchIds">
            <summary>
            The mapping between platform specific touch ids
            and the touch ids we assign to touch locations.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.GetCapabilities">
            <summary>
            Returns capabilities of touch panel device.
            </summary>
            <returns><see cref="T:Microsoft.Xna.Framework.Input.Touch.TouchPanelCapabilities"/></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update the current timestamp and run gesture recognition for this frame if it is enabled
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.AgeTouches(System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Touch.TouchLocation})">
            <summary>
            Age all the touches, so any that were Pressed become Moved, and any that were Released are removed
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.ApplyTouch(System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Touch.TouchLocation},Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Apply the given new touch to the state. If it is a Pressed it will be added as a new touch, otherwise we update the existing touch it matches
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.ReleaseAllTouches">
            <summary>
            This will release all touch locations.  It should only be 
            called on platforms where touch state is reset all at once.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.ReadGesture">
            <summary>
            Returns the next available gesture on touch panel device.
            </summary>
            <returns><see cref="T:Microsoft.Xna.Framework.Input.Touch.GestureSample"/></returns>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchPanelState._pinchTouch">
            <summary>
            The pinch touch locations.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchPanelState._pinchGestureStarted">
            <summary>
            If true the pinch touch locations are valid and
            a pinch gesture has begun.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchPanelState._tapDisabled">
            <summary>
            Used to disable emitting of tap gestures.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Input.Touch.TouchPanelState._holdDisabled">
            <summary>
            Used to disable emitting of hold gestures.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.WindowHandle">
            <summary>
            The window handle of the touch panel. Purely for Xna compatibility.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayHeight">
            <summary>
            Gets or sets the display height of the touch panel.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayOrientation">
            <summary>
            Gets or sets the display orientation of the touch panel.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.DisplayWidth">
            <summary>
            Gets or sets the display width of the touch panel.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.EnabledGestures">
            <summary>
            Gets or sets enabled gestures.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Input.Touch.TouchPanelState.IsGestureAvailable">
            <summary>
            Returns true if a touch gesture is available.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.Dispose">
            <summary>
            Immediately releases the unmanaged resources used by this object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.GetAlbumArt">
            <summary>
            Returns the stream that contains the album art image data.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.GetThumbnail">
            <summary>
            Returns the stream that contains the album thumbnail image data.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.ToString">
            <summary>
            Returns a String representation of this Album.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Album.GetHashCode">
            <summary>
            Gets the hash code for this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Album.Duration">
            <summary>
            Gets the duration of the Album.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Album.Genre">
            <summary>
            Gets the Genre of the Album.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Album.HasArt">
            <summary>
            Gets a value indicating whether the Album has associated album art.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Album.IsDisposed">
            <summary>
            Gets a value indicating whether the object is disposed.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Album.Name">
            <summary>
            Gets the name of the Album.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Album.Songs">
            <summary>
            Gets a SongCollection that contains the songs on the album.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.AlbumCollection.Dispose">
            <summary>
            Immediately releases the unmanaged resources used by this object.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.AlbumCollection.Count">
            <summary>
            Gets the number of Album objects in the AlbumCollection.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.AlbumCollection.IsDisposed">
            <summary>
            Gets a value indicating whether the object is disposed.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.AlbumCollection.Item(System.Int32)">
            <summary>
            Gets the Album at the specified index in the AlbumCollection.
            </summary>
            <param name="index">Index of the Album to get.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Artist.Dispose">
            <summary>
            Immediately releases the unmanaged resources used by this object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Artist.ToString">
            <summary>
            Returns a String representation of the Artist.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Artist.GetHashCode">
            <summary>
            Gets the hash code for this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Artist.Albums">
            <summary>
            Gets the AlbumCollection for the Artist.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Artist.IsDisposed">
            <summary>
            Gets a value indicating whether the object is disposed.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Artist.Name">
            <summary>
            Gets the name of the Artist.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Artist.Songs">
            <summary>
            Gets the SongCollection for the Artist.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Genre.Dispose">
            <summary>
            Immediately releases the unmanaged resources used by this object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Genre.ToString">
            <summary>
            Returns a String representation of the Genre.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.Genre.GetHashCode">
            <summary>
            Gets the hash code for this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Genre.Albums">
            <summary>
            Gets the AlbumCollection for the Genre.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Genre.IsDisposed">
            <summary>
            Gets a value indicating whether the object is disposed.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Genre.Name">
            <summary>
            Gets the name of the Genre.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Genre.Songs">
            <summary>
            Gets the SongCollection for the Genre.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaLibrary.Load(System.Action{System.Int32})">
            <summary>
            Load the contents of MediaLibrary. This blocking call might take up to a few minutes depending on the platform and the size of the user's music library.
            </summary>
            <param name="progressCallback">Callback that reports back the progress of the music library loading in percents (0-100).</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.MediaPlayer.Play(Microsoft.Xna.Framework.Media.Song)">
            <summary>
            Play clears the current playback queue, and then queues up the specified song for playback. 
            Playback starts immediately at the beginning of the song.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.Album">
            <summary>
            Gets the Album on which the Song appears.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.Artist">
            <summary>
            Gets the Artist of the Song.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Song.Genre">
            <summary>
            Gets the Genre of the Song.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Media.VideoSoundtrackType">
            <summary>
            Type of sounds in a video
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.VideoSoundtrackType.Music">
            <summary>
            This video contains only music.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.VideoSoundtrackType.Dialog">
            <summary>
            This video contains only dialog.
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Media.VideoSoundtrackType.MusicAndDialog">
            <summary>
            This video contains music and dialog.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Media.Video">
            <summary>
            Represents a video.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Video.FileName">
            <summary>
            I actually think this is a file PATH...
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Video.Duration">
            <summary>
            Gets the duration of the Video.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Video.FramesPerSecond">
            <summary>
            Gets the frame rate of this video.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Video.Height">
            <summary>
            Gets the height of this video, in pixels.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Video.VideoSoundtrackType">
            <summary>
            Gets the VideoSoundtrackType for this video.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.Video.Width">
            <summary>
            Gets the width of this video, in pixels.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.VideoPlayer.GetTexture">
            <summary>
            Retrieves a Texture2D containing the current frame of video being played.
            </summary>
            <returns>The current frame of video.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.VideoPlayer.Pause">
            <summary>
            Pauses the currently playing video.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.VideoPlayer.Play(Microsoft.Xna.Framework.Media.Video)">
            <summary>
            Plays a Video.
            </summary>
            <param name="video">Video to play.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.VideoPlayer.Resume">
            <summary>
            Resumes a paused video.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.VideoPlayer.Stop">
            <summary>
            Stops playing a video.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Media.VideoPlayer.Dispose">
            <summary>
            Immediately releases the unmanaged resources used by this object.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.VideoPlayer.IsDisposed">
            <summary>
            Gets a value that indicates whether the object is disposed.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.VideoPlayer.IsLooped">
            <summary>
            Gets a value that indicates whether the player is playing video in a loop.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.VideoPlayer.IsMuted">
            <summary>
            Gets or sets the muted setting for the video player.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.VideoPlayer.PlayPosition">
            <summary>
            Gets the play position within the currently playing video.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.VideoPlayer.State">
            <summary>
            Gets the media playback state, MediaState.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.VideoPlayer.Video">
            <summary>
            Gets the Video that is currently playing.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Media.VideoPlayer.Volume">
            <summary>
            Video player volume, from 0.0f (silence) to 1.0f (full volume relative to the current device volume).
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Storage.StorageContainer">
            <summary>
            Contains a logical collection of files used for user-data storage.
            </summary>			
            <remarks>MSDN documentation contains related conceptual article: http://msdn.microsoft.com/en-us/library/bb200105.aspx#ID4EDB</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.#ctor(Microsoft.Xna.Framework.Storage.StorageDevice,System.String,System.Nullable{Microsoft.Xna.Framework.PlayerIndex})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Xna.Framework.Storage.StorageContainer"/> class.
            </summary>
            <param name="device">The attached storage-device.</param>
            <param name="name"> name.</param>
            <param name="playerIndex">The player index of the player to save the data.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.CreateDirectory(System.String)">
            <summary>
            Creates a new directory in the storage-container.
            </summary>
            <param name="directory">Relative path of the directory to be created.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.CreateFile(System.String)">
            <summary>
            Creates a file in the storage-container.
            </summary>
            <param name="file">Relative path of the file to be created.</param>
            <returns>Returns <see cref="T:System.IO.Stream"/> for the created file.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.DeleteDirectory(System.String)">
            <summary>
            Deletes specified directory for the storage-container.
            </summary>
            <param name="directory">The relative path of the directory to be deleted.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.DeleteFile(System.String)">
            <summary>
            Deletes a file from the storage-container.
            </summary>
            <param name="file">The relative path of the file to be deleted.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.DirectoryExists(System.String)">
            <summary>
            Returns true if specified path exists in the storage-container, false otherwise.
            </summary>
            <param name="directory">The relative path of directory to query for.</param>
            <returns>True if queried directory exists, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.Dispose">
            <summary>
            Disposes un-managed objects referenced by this object.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.FileExists(System.String)">
            <summary>
            Returns true if the specified file exists in the storage-container, false otherwise.
            </summary>
            <param name="file">The relative path of file to query for.</param>
            <returns>True if queried file exists, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.GetDirectoryNames">
            <summary>
            Returns list of directory names in the storage-container.
            </summary>
            <returns>List of directory names.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.GetFileNames">
            <summary>
            Returns list of file names in the storage-container.
            </summary>
            <returns>List of file names.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.GetFileNames(System.String)">
            <summary>
            Returns list of file names with given search pattern.
            </summary>
            <param name="searchPattern">A search pattern that supports single-character ("?") and multicharacter ("*") wildcards.</param>
            <returns>List of matched file names.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.OpenFile(System.String,System.IO.FileMode)">
            <summary>
            Opens a file contained in storage-container.
            </summary>
            <param name="file">Relative path of the file.</param>
            <param name="fileMode"><see cref="T:System.IO.FileMode"/> that specifies how the file is opened.</param>
            <returns><see cref="T:System.IO.Stream"/> object for the opened file.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens a file contained in storage-container.
            </summary>
            <param name="file">Relative path of the file.</param>
            <param name="fileMode"><see cref="T:System.IO.FileMode"/> that specifies how the file is opened.</param>
            <param name="fileAccess"><see cref="T:System.IO.FileAccess"/> that specifies access mode.</param>
            <returns><see cref="T:System.IO.Stream"/> object for the opened file.</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageContainer.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Opens a file contained in storage-container.
            </summary>
            <param name="file">Relative path of the file.</param>
            <param name="fileMode"><see cref="T:System.IO.FileMode"/> that specifies how the file is opened.</param>
            <param name="fileAccess"><see cref="T:System.IO.FileAccess"/> that specifies access mode.</param>
            <param name="fileShare">A bitwise combination of <see cref="T:System.IO.FileShare"/> enumeration values that specifies access modes for other stream objects.</param>
            <returns><see cref="T:System.IO.Stream"/> object for the opened file.</returns>
        </member>
        <member name="P:Microsoft.Xna.Framework.Storage.StorageContainer.DisplayName">
            <summary>
            Returns display name of the title.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Storage.StorageContainer.IsDisposed">
            <summary>
            Gets a bool value indicating whether the instance has been disposed.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Storage.StorageContainer.StorageDevice">
            <summary>
            Returns the <see cref="P:Microsoft.Xna.Framework.Storage.StorageContainer.StorageDevice"/> that holds logical files for the container.
            </summary>
        </member>
        <member name="E:Microsoft.Xna.Framework.Storage.StorageContainer.Disposing">
            <summary>
            Fired when <see cref="M:Microsoft.Xna.Framework.Storage.StorageContainer.Dispose"/> is called or object if finalized or collected by the garbage collector.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Storage.StorageDevice">
            <summary>
            Exposes a storage device for storing user data.
            </summary>
            <remarks>MSDN documentation contains related conceptual article: http://msdn.microsoft.com/en-us/library/bb200105.aspx</remarks>
        </member>
        <member name="M:Microsoft.Xna.Framework.Storage.StorageDevice.#ctor(System.Nullable{Microsoft.Xna.Framework.PlayerIndex},System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Microsoft.Xna.Framework.Storage.StorageDevice"/> instance.
            </summary>
            <param name="player">The playerIndex of the player.</param>
            <param name="sizeInBytes">Size of the storage device.</param>
            <param name="directoryCount"></param>
        </member>
        <member name="P:Microsoft.Xna.Framework.Storage.StorageDevice.FreeSpace">
            <summary>
            Returns the amount of free space.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Storage.StorageDevice.IsConnected">
            <summary>
            Returns true if device is connected, false otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Xna.Framework.Storage.StorageDevice.TotalSpace">
            <summary>
            Returns the total size of device.
            </summary>
        </member>
        <member name="E:Microsoft.Xna.Framework.Storage.StorageDevice.DeviceChanged">
            <summary>
            Fired when a device is removed or inserted.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Storage.StorageDeviceHelper">
            <summary>
            This is a helper class to obtain the native file system information.
            </summary>
            <remarks>Look at the Mac implementation.</remarks>
        </member>
        <member name="P:Microsoft.Xna.Framework.Storage.StorageDeviceHelper.Path">
            <summary>
            Gets or sets path for root of the <see cref="T:Microsoft.Xna.Framework.Storage.StorageDevice"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Utilities.FileHelpers.ResolveRelativePath(System.String,System.String)">
            <summary>
            Combines the filePath and relativeFile based on relativeFile being a file in the same location as filePath.
            Relative directory operators (..) are also resolved
            </summary>
            <example>"A\B\C.txt","D.txt" becomes "A\B\D.txt"</example>
            <example>"A\B\C.txt","..\D.txt" becomes "A\D.txt"</example>
            <param name="filePath">Path to the file we are starting from</param>
            <param name="relativeFile">Relative location of another file to resolve the path to</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Utilities.ReflectionHelpers.IsConcreteClass(System.Type)">
            <summary>
            Returns true if the given type represents a class that is not abstract
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Utilities.ReflectionHelpers.PropertyIsPublic(System.Reflection.PropertyInfo)">
            <summary>
            Returns true if the get and set methods of the given property exist and are public
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Utilities.ReflectionHelpers.IsAssignableFrom(System.Type,System.Object)">
            <summary>
            Returns true if the given type can be assigned the given value
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Utilities.ReflectionHelpers.IsAssignableFromType(System.Type,System.Type)">
            <summary>
            Returns true if the given type can be assigned a value with the given object type
            </summary>
        </member>
        <member name="T:MonoGame.Framework.XamlGame`1">
            <summary>
            Static class for initializing a Game object for a XAML application.
            </summary>
            <typeparam name="T">A class derived from Game.</typeparam>
        </member>
        <member name="M:MonoGame.Framework.XamlGame`1.Create(System.String,Windows.UI.Core.CoreWindow,Windows.UI.Xaml.Controls.SwapChainBackgroundPanel)">
            <summary>
            Creates your Game class initializing it to worth within a XAML application window.
            </summary>
            <param name="launchParameters">The command line arguments from launch.</param>
            <param name="window">The core window object.</param>
            <param name="swapChainBackgroundPanel">The XAML SwapChainBackgroundPanel to which we render the scene and recieve input events.</param>
            <returns></returns>
        </member>
        <member name="M:MonoGame.Framework.XamlGame`1.Create(Windows.ApplicationModel.Activation.LaunchActivatedEventArgs,Windows.UI.Core.CoreWindow,Windows.UI.Xaml.Controls.SwapChainBackgroundPanel)">
            <summary>
            Preserves the previous execution state in MetroGamePlatform and returns the constructed game object initialized with the given window.
            </summary>
            <param name="args">The command line arguments from launch.</param>
            <param name="window">The core window object.</param>
            <param name="swapChainBackgroundPanel">The XAML SwapChainBackgroundPanel to which we render the scene and recieve input events.</param>
            <returns></returns>
        </member>
    </members>
</doc>
